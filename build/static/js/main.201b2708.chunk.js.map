{"version":3,"sources":["components/Header/components/NavBar/components/Filter.jsx","components/Header/components/NavBar/components/LinkItem.jsx","components/Header/components/NavBar/components/Search.jsx","components/Header/components/NavBar/Navbar.jsx","components/Header/components/Logo.jsx","components/Header/Header.jsx","components/Footer.jsx","api/api.js","redusers/personReducer.js","utils/utils.js","pages/actor/Actor.jsx","pages/actor/ActorContainer.jsx","redusers/filmReducer.js","hooks/useObjectToString.js","pages/film/components/Info.jsx","pages/film/components/Seasons/Components/SectionPagination.jsx","pages/film/components/Seasons/Seasons.jsx","components/Pagination.jsx","hooks/useFilteredObject.js","hooks/usePagination.js","pages/film/components/Facts.jsx","pages/film/components/BoxOffice.jsx","pages/film/components/Videos/Components/SectionPagination.jsx","pages/film/components/Videos/Videos.jsx","pages/film/components/Frames.jsx","pages/film/components/Reviews.jsx","components/SmallPagination.jsx","pages/film/components/Staff.jsx","pages/home/components/SliderFilms.jsx","pages/film/Film.jsx","pages/film/FilmContainer.jsx","redusers/premiersReducer.js","redusers/filmsReducer.js","hooks/useSwitchPath.js","pages/home/components/SectionFilms.jsx","pages/home/Home.jsx","pages/home/HomeContainer.jsx","Routes.js","components/App.jsx","redusers/store.js","index.js"],"names":["FilterContainer","styled","div","props","active","Icon","Filter","useState","setActive","onClick","name","Item","li","Content","ItemLink","url","text","icon","exact","to","SearchContainer","Input","input","Search","keyWord","setKeyWord","value","onChange","e","target","type","placeholder","Container","List","ul","Navbar","StyledLink","Link","Number","Description","Logo","Header","Footer","instance","axios","create","baseURL","headers","getAllFilms","params","query","a","get","response","data","getFilmData","getPersonData","id","SET_PERSON_DATA","SET_IS_LOADING_PERSON_DATA","SET_FETCH_ERROR_PERSON_DATA","RESET_PERSON_DATA","initialState","personData","isLoading","fetchError","setPersonDataAC","payload","setIsLoadingPersonDataAC","bool","someDate","Date","toLocaleString","month","day","year","nextData","currentYear","getFullYear","currentMonth","getMonth","toString","toUpperCase","Actor","isMale","sex","birthDescription","birthday","birthplace","deathDescription","death","deathplace","age","lifeDescription","src","posterUrl","alt","nameRu","nameEn","profession","facts","map","item","index","films","professionKey","filmId","general","description","rating","ActorContainer","personId","match","slug","person","useSelector","state","dispatch","useDispatch","useEffect","console","log","message","error","SET_FILM_DATA","SET_IS_LOADING_FILM_DATA","SET_FETCH_ERROR_FILM_DATA","RESET_FILM_DATA","filmInfo","filmSeasons","filmFacts","filmDistrib","filmBox_office","filmVideos","filmSimilars","filmFrames","filmReviews","filmStaff","setFilmInfoAC","setIsLoadingFilmInfoAC","setFetchErrorFilmInfoAC","useObjectToString","object","string","setString","array","forEach","push","join","section","Poster","Desc","Aside","aside","Info","countries","genres","nameOriginal","slogan","ratingKinopoisk","filmLength","Page","currentPage","Arrow","SectionPagination","setCurrentPage","portionSize","portionCount","Math","ceil","length","portionNumber","setPortionNumber","leftPortionPageNumber","rigthPortionPageNumber","filter","number","Episod","Seasons","activePath","setActivePath","setActiveSeason","activeSeason","seasonData","setSeasonData","isSerial","total","items","episodes","episodeNumber","synopsis","releaseDate","Pagination","totalCount","pages","useFilteredObject","key","filteredOject","setFilteredObjectSlice","newObject","reduce","accum","usePagination","limit","activeSlug","setActiveSlug","slicedObject","setSlicedObject","totalPage","setTotalPage","start","end","newData","slice","FactItem","title","dangerouslySetInnerHTML","__html","Facts","FACT","totalPageFacts","currentPageFacts","setCurrentPageFacts","BLOOPER","bloopers","totalPageBloopers","currentPageBloopers","setCurrentPageBloopers","BoxItem","symbol","amount","BoxOffice","Videos","setUrl","width","controls","Title","h3","Image","Picture","img","Frames","frames","preview","Reviews","span","SmallPagination","i","p","page","Staff","DIRECTOR","directors","totalPageDirectors","currentPageDirectors","setCurrentPageDirectors","ACTOR","actors","totalPageActors","currentPageActors","setCurrentPageActors","COMPOSER","composers","totalPageComposers","currentPageComposers","setCurrentPageComposers","DESIGN","design","totalPageDesign","currentPageDesign","setCurrentPageDesign","EDITOR","editors","totalPageEditors","currentPageEditors","setCurrentPageEditors","OPERATOR","operators","totalPageOperators","currentPageOperators","setCurrentPageOperators","PRODUCER","producers","totalPageProducers","currentPageProducers","setCurrentPageProducers","TRANSLATOR","translators","totalPageTranslators","currentPageTranslators","setCurrentPageTranslators","VOICE_DIRECTOR","voiceDirectors","totalPageVoiceDirectors","currentPageVoiceDirectors","setCurrentPageVoiceDirectors","WRITER","writers","totalPageWriters","currentPageWriters","setCurrentPageWriters","Card","CardTitle","h4","CardList","CardItem","CardImage","CardLink","StaffItem","staffId","h2","SliderFilms","React","memo","kinopoiskId","posterUrlPreview","Film","FilmContainer","stateFilm","filmData","requestData","getFilmInfo","SET_PREMIERS","SET_IS_LOADING_PREMIERS","SET_FETCH_ERROR_PREMIERS","SET_CARRENT_PAGE_PREMIERS","RESET_PREMIERS","pagesCount","setIsLoadingPremiersAC","SET_FILMS","SET_IS_LOADING_FILMS","SET_FETCH_ERROR_FILMS","SET_CARRENT_PAGE_FILMS","RESET_DATA","setIsLoadingFilmsAC","setCurrentPageFilmsAC","useSwitchPath","path","setParams","setTitle","h1","Contant","SectionFilms","Home","stateTopFilms","statePremiers","HomeContainer","premiers","topFilms","getPremiers","getFilms","Routes","component","App","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"gPAGMA,EAAkBC,IAAOC,IAAV,6KAIT,SAAAC,GAAK,OAAIA,EAAMC,OAAS,OAAS,UAMvCC,EAAOJ,IAAOC,IAAV,kDAqBKI,EAjBA,WACZ,MAA4BC,oBAAS,GAArC,mBAAOH,EAAP,KAAeI,EAAf,KAMA,OACG,eAACR,EAAD,CAAiBS,QALG,WACpBD,GAAWJ,IAI+BA,OAAQA,EAAlD,UACG,cAACC,EAAD,UACG,0BAAUK,KAAK,cAElB,6H,OCzBHC,EAAOV,IAAOW,GAAV,iNAYJC,EAAUZ,IAAOC,IAAV,uIAsBEY,EAbE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,OACG,cAACN,EAAD,UACG,cAAC,IAAD,CAASO,OAAK,EAACC,GAAIJ,EAAnB,SACG,eAACF,EAAD,WACG,0BAAUH,KAAMO,IAChB,+BAAOD,YC5BhBI,EAAkBnB,IAAOC,IAAV,oDAGfmB,EAAQpB,IAAOqB,MAAV,uKAQLjB,EAAOJ,IAAOC,IAAV,wRAgCKqB,EAjBA,WACZ,MAA8BhB,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAMA,OACG,eAACL,EAAD,WACG,cAACC,EAAD,CAAOK,MAAOF,EAASG,SAPL,SAACC,GACtB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBD,EAAWC,IAK0CI,KAAK,OAAOC,YAAY,sIAC1E,cAAC,EAAD,UACG,0BAAUrB,KAAK,iBClCrBsB,EAAY/B,IAAOC,IAAV,8FAKT+B,EAAOhC,IAAOiC,GAAV,uFAsBKC,EAfA,WACZ,OACG,cAACH,EAAD,UACG,eAACC,EAAD,WACG,cAAC,EAAD,CAAUlB,IAAI,IAAIC,KAAK,uCAASC,KAAK,cACrC,cAAC,EAAD,CAAUF,IAAI,YAAYC,KAAK,+DAAaC,KAAK,UACjD,cAAC,EAAD,CAAUF,IAAI,SAASC,KAAK,yDAAYC,KAAK,SAC7C,cAAC,EAAD,IACA,cAAC,EAAD,UCrBNmB,EAAanC,YAAOoC,IAAPpC,CAAH,uDAGV+B,EAAY/B,IAAOC,IAAV,iNAUToC,EAASrC,IAAOC,IAAV,2EAINqC,EAActC,IAAOC,IAAV,0EAoBFsC,EAfF,WACV,OACG,cAACJ,EAAD,CAAYjB,GAAG,IAAf,SACG,eAAC,EAAD,WACG,cAAC,EAAD,iBAGA,cAACoB,EAAD,qCC7BNP,EAAY/B,IAAOC,IAAV,4HAiBAuC,EAVA,WACZ,OACG,eAAC,EAAD,WACG,cAAC,EAAD,IACA,cAAC,EAAD,QCRMC,EANA,WACZ,OACG,0C,sDCFAC,G,OAAWC,EAAcC,OAAO,CACnCC,QAAS,sCACTC,QAAS,CAAE,YAAa,0CAGpB,SAAeC,GAAtB,qC,8CAAO,WAA2BC,EAAQC,GAAnC,eAAAC,EAAA,sEACmBR,GAASS,IAAIF,EAAO,CACxCD,OAAQA,IAFP,cACEI,EADF,yBAIGA,EAASC,MAJZ,4C,sBAOA,SAAeC,GAAtB,mC,8CAAO,WAA2BxC,GAA3B,eAAAoC,EAAA,sEACmBR,GAASS,IAAIrC,GADhC,cACEsC,EADF,yBAEGA,EAASC,MAFZ,4C,sBAKA,SAAeE,GAAtB,mC,8CAAO,WAA6BC,GAA7B,eAAAN,EAAA,sEACmBR,GAASS,IAAT,wBAA8BK,IADjD,cACEJ,EADF,yBAEGA,EAASC,MAFZ,4C,sBCjBP,IAAMI,GAAkB,kBAClBC,GAA6B,6BAC7BC,GAA8B,8BAC9BC,GAAoB,oBAEpBC,GAAe,CAClBC,WAAY,GACZC,UAAW,KACXC,WAAY,MAiCR,IAAMC,GAAkB,SAACZ,GAAD,MAAW,CAAExB,KAAM4B,GAAiBS,QAASb,IAC/Dc,GAA2B,SAACC,GAAD,MAAW,CAAEvC,KAAM6B,GAA4BQ,QAASE,IC5CnFC,GAAW,SAAChB,GACtB,IAAIgB,EAAW,IAAIC,KAAKjB,GACxB,OAAOgB,EAASE,eAAe,QAAS,CAAEC,MAAO,OAAQC,IAAK,UAAWC,KAAM,aAGrEC,GAAW,WACrB,IAEIC,GAAc,IAAIN,MAAOO,cACzBC,GAAe,IAAIR,MAAOS,WAM9B,MAJa,CACVL,MAAwB,KAAjBI,IAAwBF,EAAcA,GAAaI,WAC1DR,MAPgB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAO5F,KAAjBM,EAAsB,IAAMA,GAAcG,gBAIlEN,KCZA,IAiDeO,GAjDD,SAAC,GAAqC,IAAnC7B,EAAkC,EAAlCA,KAAMU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC3BmB,EAAsB,SAAb9B,EAAK+B,IACdC,EAAgB,UAAMF,EAAS,6CAAY,mDAA3B,YAAyCd,GAAShB,EAAKiC,UAAvD,mBAAsEjC,EAAKkC,WAA3E,KAChBC,EAAmBnC,EAAKoC,MAAL,UAAgBN,EAAS,yDAAc,+DAAvC,YAAuDd,GAAShB,EAAKoC,OAArE,mBAAiFpC,EAAKqC,WAAtF,oEAA+GrC,EAAKsC,IAApH,KAA6H,GAChJC,EAAe,UAAMP,EAAN,YAA0BG,GAE7C,OAAIzB,EACM,6CAGNC,EACM,6CAIP,gCACG,gCACG,8BACG,qBAAK6B,IAAKxC,EAAKyC,UAAWC,IAAK1C,EAAK2C,QAAU3C,EAAK4C,WAEtD,gCACG,6BAAK5C,EAAK2C,QAAU3C,EAAK4C,SACzB,6BAAK5C,EAAK6C,aACV,4BAAIN,IACHvC,EAAK8C,OACH9C,EAAK8C,MAAMC,KAAI,SAACC,EAAMC,GACnB,OAAO,4BAAgBD,GAARC,YAK3B,gCACG,0GACCjD,EAAKkD,OACHlD,EAAKkD,MAAMH,KAAI,SAACC,EAAMC,GACnB,OACG,8BAC2B,UAAvBD,EAAKG,eACH,gCAAK,cAAC,IAAD,CAAMtF,GAAE,gBAAWmF,EAAKI,QAAxB,SAAoCJ,EAAKL,QAAUK,EAAKJ,SAA7D,KAA8EI,EAAKK,QAAU,oDAAc,oGAA3G,6BAAqI,+BAAOL,EAAKM,cAAjJ,2JAAqMN,EAAKO,WAFtMN,aCtBhBO,GAdQ,SAAC,GAAe,IAC9BC,EAD6B,EAAZC,MACA/D,OAAOgE,KACxBC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpCG,EAAWC,cASjB,OAPAC,qBAAU,WHsCgB,IAAC9D,EGpCxB,OADA4D,GHqCwB5D,EGrCDsD,EHsC1B,uCAAO,WAAOM,GAAP,SAAAlE,EAAA,sEAEDkE,EAASjD,IAAyB,IAFjC,KAGDiD,EAHC,KAGQnD,GAHR,SAG8BV,GAAcC,GAH5C,wGAMD+D,QAAQC,IAAI,KAAMC,SAClBL,GAXiCM,EAWE,EAAD,GAXU,CAAE7F,KAAM8B,GAA6BO,QAASwD,KAY1FN,EAASjD,IAAyB,IARjC,kCAJ+B,IAACuD,IAIhC,qBAAP,wDGrCU,WACJN,EHiC+B,CAAEvF,KAAM+B,QG/B1C,CAACwD,EAAUN,IAEP,cAAC,GAAD,CAAOzD,KAAM4D,EAAOnD,WAAYC,UAAWkD,EAAOlD,UAAWC,WAAYiD,EAAOjD,c,SCfpF2D,GAAgB,gBAChBC,GAA2B,4BAC3BC,GAA4B,6BAC5BC,GAAkB,kBAElBjE,GAAe,CAClBkE,SAAU,CACP1E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfgE,YAAa,CACV3E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfiE,UAAW,CACR5E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfkE,YAAa,CACV7E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfmE,eAAgB,CACb9E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfoE,WAAY,CACT/E,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfqE,aAAc,CACXhF,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfsE,WAAY,CACTjF,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfuE,YAAa,CACVlF,KAAM,GACNU,UAAW,KACXC,WAAY,MAEfwE,UAAW,CACRnF,KAAM,GACNU,UAAW,KACXC,WAAY,OAoBX,I,iIAAMyE,GAAgB,SAACpF,EAAMgD,GAAP,MAAiB,CAAExE,KAAM8F,GAAezD,QAASb,EAAMgD,SACvEqC,GAAyB,SAACtE,EAAMiC,GAAP,MAAiB,CAAExE,KAAM+F,GAA0B1D,QAASE,EAAMiC,SAC3FsC,GAA0B,SAACjB,EAAOrB,GAAR,MAAkB,CAAExE,KAAMgG,GAA2B3D,QAASwD,EAAOrB,SC3D7FuC,GAjBW,SAACC,EAAQpH,GAChC,MAA4BnB,mBAAS,IAArC,mBAAOwI,EAAP,KAAeC,EAAf,KAaA,OAXAzB,qBAAU,WACP,GAAIuB,EAAQ,CACT,IAAMG,EAAQ,GACdH,EAAOI,SAAQ,SAAA5C,GACZ2C,EAAME,KAAK7C,EAAK5E,OAEnBsH,EAAUC,EAAMG,KAAK,UAExB,CAACN,EAAQpH,IAGL,CAACqH,ICXL/G,GAAY/B,IAAOoJ,QAAV,8FAKTC,GAASrJ,IAAOC,IAAV,sPAaNqJ,GAAOtJ,IAAOC,IAAV,6dA0BJsJ,GAAQvJ,IAAOwJ,MAAV,oUAkEIC,GAhDF,SAAC,GAAqC,IAAnCpG,EAAkC,EAAlCA,KAAMU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAE9B,EAAoB4E,GAAkBvF,EAAKqG,UAAW,WAA/CA,EAAP,oBACA,EAAiBd,GAAkBvF,EAAKsG,OAAQ,SAAzCA,EAAP,oBAEA,OAAI5F,EACM,6CAENC,EACM,6CAIP,eAAC,GAAD,WACG,cAACqF,GAAD,UACG,qBAAKxD,IAAKxC,EAAKyC,UAAWC,IAAK1C,EAAK2C,WAEvC,eAACsD,GAAD,WACG,+BAAKjG,EAAK2C,OAAV,MAAqB3C,EAAKuG,gBAC1B,6BAAKvG,EAAKwG,SACV,4BAAIxG,EAAKsD,iBAEZ,eAAC4C,GAAD,WACG,gCACG,sIACA,+BAAOlG,EAAKyG,qBAEf,gCACG,kGACA,+BAAOzG,EAAKqB,UAEf,gCACG,2IACA,iCAAOrB,EAAK0G,WAAZ,6BAEH,gCACG,yEACA,+BAAOL,OAEV,gCACG,6DACA,+BAAOC,cCxGhB5H,GAAY/B,IAAOC,IAAV,4FAKT+J,GAAOhK,IAAOC,IAAV,mEAEE,SAAAC,GAAK,OAAIA,EAAM+J,YAAc,OAAS,UAE5CC,GAAQlK,IAAOC,IAAV,yEAiCIkK,GA5BS,SAAC,GAA6D,IAA3D9G,EAA0D,EAA1DA,KAAM4G,EAAoD,EAApDA,YAAaG,EAAuC,EAAvCA,eAAuC,IAAvBC,mBAAuB,MAAT,GAAS,EAE5EC,EAAeC,KAAKC,KAAKnH,EAAKoH,OAASJ,GAC7C,EAAwC/J,mBAASiK,KAAKC,KAAKP,EAAcI,IAAzE,mBAAKK,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKL,EAAc,EAC5DQ,EAAyBH,EAAgBL,EAM7C,OAJA/C,qBAAU,WACPqD,EAAiB,KACjB,IAEI,eAAC,GAAD,WACHD,EAAgB,GAAK,cAACR,GAAD,CAAO1J,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,oBACrBrH,EAAKoH,OAAS,GAAKpH,EAChByH,QAAO,SAACzE,EAAMC,GACZ,OAAOA,EAAQ,GAAKsE,GAAyBtE,EAAQ,GAAKuE,KAE5DzE,KAAI,SAACC,EAAMC,GACT,OACG,cAAC0D,GAAD,CAAwBxJ,QAAS,SAAAmB,GAAOyI,EAAe/D,EAAK0E,SAAWd,YAAaA,IAAgB5D,EAAK0E,OAAzG,SACG,iEAAY1E,EAAK0E,WADT1E,EAAK0E,WAKxBT,EAAeI,GAAiB,cAACR,GAAD,CAAO1J,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,wBCrCjC3I,GAAY/B,IAAOC,IAAV,4FAKTW,GAAUZ,IAAOC,IAAV,4FAKP+K,GAAShL,IAAOC,IAAV,oQAmEGgL,GAjDC,SAAC,GAA2C,IAAzC5H,EAAwC,EAAxCA,KAAMU,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAAYgD,EAAW,EAAXA,KAC7C,EAAoC1G,mBAAS0G,GAA7C,mBAAOkE,EAAP,KAAmBC,EAAnB,KACA7D,qBAAU,WACH4D,IAAelE,IAChBoE,EAAgB,GAChBD,EAAcnE,MAEjB,CAACA,EAAMkE,IAEV,MAAwC5K,mBAAS,GAAjD,mBAAO+K,EAAP,KAAqBD,EAArB,KACA,EAAoC9K,mBAAS,MAA7C,mBAAOgL,EAAP,KAAmBC,EAAnB,KACMC,EAA2B,IAAhBnI,EAAKoH,QAA+B,IAAfpH,EAAKoI,MAS3C,OAPAnE,qBAAU,WACP,GAAoB,IAAhBjE,EAAKoH,OAAc,CACpB,IAAMpE,EAAOhD,EAAKqI,MAAML,EAAe,GACvCE,EAAclF,MAEjB,CAAChD,EAAMgI,IAENtH,EACM,6CAENC,EACM,6CAIP,mCACIwH,GACE,eAAC,GAAD,WACG,cAAC,GAAD,CAAmBnI,KAAMA,EAAKqI,MAAOzB,YAAaoB,EAAcjB,eAAgBgB,EAAiBf,YAAa,IAC9G,cAAC,GAAD,UACIiB,GAAcA,EAAWK,SAASvF,KAAI,SAAAC,GACpC,OACG,eAAC2E,GAAD,WACG,4EAAe3E,EAAKuF,cAApB,YAAqCvF,EAAKL,OAASK,EAAKL,OAAS,MAChEK,EAAKwF,UAAY,4BAAIxF,EAAKwF,WAC3B,kGAAmBxH,GAASgC,EAAKyF,kBAHvBzF,EAAKuF,0BCjEpC5J,GAAOhC,IAAOiC,GAAV,uIAOJvB,GAAOV,IAAOW,GAAV,8QAUa,SAAAT,GAAK,OAAIA,EAAMmG,OAASnG,EAAM+J,YAAc,OAAS,UAChE,SAAA/J,GAAK,OAAIA,EAAMmG,OAASnG,EAAM+J,YAAc,OAAS,UA0BlD8B,GAvBI,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAAY/B,EAAkC,EAAlCA,YAAaG,EAAqB,EAArBA,eACtC6B,EAAQ,GACd,GAAID,EACD,IAAK,IAAI1F,EAAQ,EAAGA,GAAS0F,EAAY1F,IACtC2F,EAAM/C,KAAK5C,GAIjB,OAAI2F,EAAMxB,OAAS,EACT,KAIP,cAAC,GAAD,UACIwB,EAAM7F,KAAI,SAAAC,GACR,OACG,cAAC,GAAD,CAAiB7F,QAAS,SAAAmB,GAAOyI,EAAe/D,IAASA,KAAMA,EAAM4D,YAAaA,EAAlF,SAAiG5D,GAAtFA,SCrBX6F,GAjBW,SAAC7I,EAAM8I,GAC9B,MAAgD7L,mBAAS,IAAzD,mBAAO8L,EAAP,KAAsBC,EAAtB,KAaA,OAXA/E,qBAAU,WACP,GAAIjE,EAAM,CACP,IAAMiJ,EAAYjJ,EAAKkJ,QAAO,SAACC,EAAOnG,GAGnC,OAFMA,EAAK8F,KAAQK,IAAQA,EAAMnG,EAAK8F,IAAQ,IAC9CK,EAAMnG,EAAK8F,IAAMjD,KAAK7C,GACfmG,IACP,IACHH,EAAuBC,MAE1B,CAACjJ,EAAM8I,IAEH,CAACC,ICgBIK,GA9BO,SAACpJ,EAAMqJ,EAAO1F,GACjC,MAAoC1G,mBAAS,MAA7C,mBAAOqM,EAAP,KAAmBC,EAAnB,KACA,EAAsCtM,mBAAS,GAA/C,mBAAO2J,EAAP,KAAoBG,EAApB,KACA,EAAwC9J,mBAAS,IAAjD,mBAAOuM,EAAP,KAAqBC,EAArB,KACA,EAAkCxM,qBAAlC,mBAAOyM,EAAP,KAAkBC,EAAlB,KAuBA,OArBA1F,qBAAU,WACHqF,IAAe3F,IAChBoD,EAAe,GACfwC,EAAc5F,MAEjB,CAACA,EAAM2F,IAEVrF,qBAAU,WACP,IAAI2F,GAAShD,EAAc,GAAKyC,EAC5BQ,EAAMD,EAAQP,EAClB,GAAIrJ,EAAM,CACP,IAAI8J,EAAU9J,EAAK+J,MAAMH,EAAOC,GAChCJ,EAAgBK,GAChBH,EAAazC,KAAKC,KAAKnH,EAAKoH,OAASiC,IAExC,OAAO,WACJI,EAAgB,IAChBE,OAEH,CAAC3J,EAAM4G,EAAayC,IAEhB,CAAC,CAAEG,eAAcE,YAAW9C,eAAeG,ICvB/CrI,GAAY/B,IAAOoJ,QAAV,4FAKTxI,GAAUZ,IAAOC,IAAV,iWA4CPoN,GAAW,SAAC,GAA6D,IAA3DhK,EAA0D,EAA1DA,KAAMiK,EAAoD,EAApDA,MAAOP,EAA6C,EAA7CA,UAAW9C,EAAkC,EAAlCA,YAAaG,EAAqB,EAArBA,eAEtD,OACG,qCACG,eAAC,GAAD,WACG,6BAAKkD,IACJjK,GACE,6BACIA,EAAK+C,KAAI,SAACC,EAAMC,GACd,OACG,oBAAgBiH,wBAAyB,CAAEC,OAAQnH,EAAKtF,OAA/CuF,WAOxB,cAAC,GAAD,CAAY0F,WAAYe,EAAW9C,YAAaA,EAAaG,eAAgBA,QAKvEqD,GA9CD,SAAC,GAAqC,IAAnCpK,EAAkC,EAAlCA,KAAMU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC/B,EAAwBkI,GAAkB7I,EAAKqI,MAAO,QAA/CU,EAAP,oBACA,EAAiHK,GAAcL,EAAcsB,KAAM,IAAnJ,0BAAuBvH,EAAvB,EAAS0G,aAAgCc,EAAzC,EAA8BZ,UAAwCa,EAAtE,EAAyD3D,YAAiC4D,EAA1F,KACA,EAA6HpB,GAAcL,EAAc0B,QAAS,IAAlK,0BAAuBC,EAAvB,EAASlB,aAAmCmB,EAA5C,EAAiCjB,UAA2CkB,EAA5E,EAA+DhE,YAAoCiE,EAAnG,KAEA,OAAInK,EACM,6CAENC,EACM,6CAIP,eAAC,GAAD,WACImC,EAAMsE,OAAS,GACb,cAAC,GAAD,CAAUpH,KAAM8C,EAAO4G,UAAWY,EAAgB1D,YAAa2D,EAAkBxD,eAAgByD,EAAqBP,MAAM,+EAE9HS,EAAStD,OAAS,GAChB,cAAC,GAAD,CAAUpH,KAAM0K,EAAUhB,UAAWiB,EAAmB/D,YAAagE,EAAqB7D,eAAgB8D,EAAwBZ,MAAM,yDC3B9Ia,GAAU,SAAC,GAAyB,IAAxB9K,EAAuB,EAAvBA,KAAMiK,EAAiB,EAAjBA,MAAOzL,EAAU,EAAVA,KAC5B,OACG,+BACOyL,EADP,YACgBjK,QADhB,IACgBA,OADhB,EACgBA,EAAM+C,KAAI,SAAAC,GACjB,OAAIA,EAAKxE,OAASA,EACT,GAAN,OAAUwE,EAAK+H,QAAf,OAAwB/H,EAAKgI,QAEzB,YAMPC,GAjCG,SAAC,GAAqC,IAAnCjL,EAAkC,EAAlCA,KAAMU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAEnC,OAAID,EACM,6CAENC,EACM,6CAIP,gCACG,6JACA,cAAC,GAAD,CAASsJ,MAAM,4EAAgBzL,KAAK,SAASwB,KAAMA,EAAKqI,QACxD,cAAC,GAAD,CAAS4B,MAAM,iEAAezL,KAAK,QAAQwB,KAAMA,EAAKqI,QACtD,cAAC,GAAD,CAAS4B,MAAM,2DAAczL,KAAK,MAAMwB,KAAMA,EAAKqI,QACnD,cAAC,GAAD,CAAS4B,MAAM,6EAAiBzL,KAAK,MAAMwB,KAAMA,EAAKqI,YCbzD3J,GAAY/B,IAAOC,IAAV,4FAKT+J,GAAOhK,IAAOC,IAAV,mEAEE,SAAAC,GAAK,OAAIA,EAAM+J,YAAc,OAAS,UAE5CC,GAAQlK,IAAOC,IAAV,yEA+BIkK,GA1BS,SAAC,GAA6D,IAA3D9G,EAA0D,EAA1DA,KAAM4G,EAAoD,EAApDA,YAAaG,EAAuC,EAAvCA,eAAuC,IAAvBC,mBAAuB,MAAT,GAAS,EAE5EC,EAAeC,KAAKC,MAAS,OAAJnH,QAAI,IAAJA,OAAA,EAAAA,EAAMoH,QAASJ,GAC9C,EAAwC/J,mBAASiK,KAAKC,KAAKP,EAAcI,IAAzE,mBAAKK,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKL,EAAc,EAC5DQ,EAAyBH,EAAgBL,EAM7C,OAJA/C,qBAAU,WACPqD,EAAiB,KACjB,IAEI,eAAC,GAAD,WACHD,EAAgB,GAAK,cAAC,GAAD,CAAOlK,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,qBACjB,OAAJrH,QAAI,IAAJA,OAAA,EAAAA,EAAMoH,QAAS,GAAKpH,EACjByH,QAAO,SAACzE,EAAMC,GACZ,OAAOA,EAAQ,GAAKsE,GAAyBtE,EAAQ,GAAKuE,KAE5DzE,KAAI,SAACC,EAAMC,GACT,OACG,cAAC,GAAD,CAAM9F,QAAS,SAAAmB,GAAOyI,EAAe/D,EAAKvF,MAAuBmJ,YAAaA,IAAgB5D,EAAKvF,IAAnG,SAAyG,6BAAKuF,EAAK5F,QAA5D4F,EAAKvF,QAGpEwJ,EAAeI,GAAiB,cAAC,GAAD,CAAOlK,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,wBCpCjC3I,GAAY/B,IAAOoJ,QAAV,4FAmCAmF,GA7BA,SAAC,GAA2C,IAAzClL,EAAwC,EAAxCA,KAAMU,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAEhC,GAFuD,EAAXgD,KAEtB1G,mBAAS,KAA/B,mBAAOQ,EAAP,KAAY0N,EAAZ,KAQA,OANAlH,qBAAU,WACU,IAAD,EAAZjE,EAAKqI,OACN8C,EAAM,UAACnL,EAAKqI,MAAM,UAAZ,aAAC,EAAe5K,OAEzB,CAACuC,EAAKqI,QAEL3H,EACM,6CAENC,EACM,6CAIP,mCACIX,EAAKoI,MAAQ,GACX,eAAC,GAAD,WACIpI,EAAKqI,OAAS,cAAC,GAAD,CAAmBrI,KAAMA,EAAKqI,MAAOzB,YAAanJ,EAAKsJ,eAAgBoE,EAAQnE,YAAa,IAC3G,uBAAOxE,IAAK/E,EAAK2N,MAAM,MAAMC,UAAQ,UC3B9C3M,GAAY/B,IAAOoJ,QAAV,4FAKTuF,GAAQ3O,IAAO4O,GAAV,qEAILhO,GAAUZ,IAAOC,IAAV,qFAKP4O,GAAQ7O,IAAOC,IAAV,kHAML6O,GAAU9O,IAAO+O,IAAV,yIAyCEC,GAjCA,SAAC,GAA2C,IAAzC3L,EAAwC,EAAxCA,KAAMU,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAAYgD,EAAW,EAAXA,KAC5C,EAAmEyF,GAAcpJ,EAAK4L,OAAQ,GAAIjI,GAAlG,0BAAS6F,EAAT,EAASA,aAAcE,EAAvB,EAAuBA,UAAW9C,EAAlC,EAAkCA,YAAeG,EAAjD,KAEA,OAAIrG,EACM,6CAENC,EACM,6CAIP,mCACI6I,GACE,eAAC,GAAD,WACG,cAAC8B,GAAD,+FACA,cAAC,GAAD,UACI9B,EAAazG,KAAI,SAACC,EAAMC,GACtB,OACG,cAACuI,GAAD,UACG,cAACC,GAAD,CAASjJ,IAAKQ,EAAK6I,QAASnJ,IAAI,YADvBO,QAMrB,cAAC,GAAD,CAAY2D,YAAaA,EAAaG,eAAgBA,EAAgB4B,WAAYe,UCnDlFoC,GAJC,SAAC,GAAkC,EAAjC9L,KAAiC,EAA3BU,UAA2B,EAAhBC,WAChC,OAAO,0CCCJjC,GAAY/B,IAAOC,IAAV,6FAKT+J,GAAOhK,IAAOoP,KAAV,mEAEE,SAAAlP,GAAK,OAAIA,EAAM+J,YAAc,OAAS,UAE5CC,GAAQlK,IAAOC,IAAV,yEAiCIoP,GA5BO,SAAC,GAEpB,IAFsF,IAAhErD,EAA+D,EAA/DA,WAAY/B,EAAmD,EAAnDA,YAAaG,EAAsC,EAAtCA,eAAsC,IAAtBC,mBAAsB,MAAR,EAAQ,EACjF4B,EAAQ,GACHqD,EAAI,EAAGA,GAAKtD,EAAYsD,IAC9BrD,EAAM/C,KAAKoG,GAGd,IAAMhF,EAAeC,KAAKC,KAAKwB,EAAa3B,GAC5C,EAAwC/J,mBAASiK,KAAKC,KAAKP,EAAcI,IAAzE,mBAAKK,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKL,EAAc,EAC5DQ,EAAyBH,EAAgBL,EAM7C,OAJA/C,qBAAU,WACPqD,EAAiB,KACjB,IAEI,eAAC,GAAD,WACHD,EAAgB,GAAK,cAAC,GAAD,CAAOlK,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,oBACrBuB,EAAMxB,OAAS,GAAKwB,EACjBnB,QAAO,SAAAyE,GACL,OAAOA,GAAK3E,GAAyB2E,GAAK1E,KAE5CzE,KAAI,SAAAoJ,GACF,OAAO,cAAC,GAAD,CAAiBhP,QAAS,WAAQ4J,EAAeoF,IAASvF,YAAaA,IAAgBuF,EAAvF,SAAgGA,GAArFA,MAEvBlF,EAAeI,GAAiB,cAAC,GAAD,CAAOlK,QAAS,WAAQmK,EAAiBD,EAAgB,IAAzD,wBCnCjC3I,GAAY/B,IAAOoJ,QAAV,4FAKTuF,GAAQ3O,IAAO4O,GAAV,6FAKLhO,GAAUZ,IAAOC,IAAV,0HA+CEwP,GAvCD,SAAC,GAA2C,IAAzCpM,EAAwC,EAAxCA,KAAMU,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAAYgD,EAAW,EAAXA,KAC3C,EAAwBkF,GAAkB7I,EAAM,iBAAzC+I,EAAP,oBACA,EAAiIK,GAAcL,EAAcsD,SAAU,GAAI1I,GAA3K,0BAAuB2I,EAAvB,EAAS9C,aAAoC+C,EAA7C,EAAkC7C,UAA4C8C,EAA9E,EAAiE5F,YAAqC6F,EAAtG,KACA,EAAqHrD,GAAcL,EAAc2D,MAAO,GAAI/I,GAA5J,0BAAuBgJ,EAAvB,EAASnD,aAAiCoD,EAA1C,EAA+BlD,UAAyCmD,EAAxE,EAA2DjG,YAAkCkG,EAA7F,KACA,EAAiI1D,GAAcL,EAAcgE,SAAU,GAAIpJ,GAA3K,0BAAuBqJ,EAAvB,EAASxD,aAAoCyD,EAA7C,EAAkCvD,UAA4CwD,EAA9E,EAAiEtG,YAAqCuG,EAAtG,KACA,EAAqH/D,GAAcL,EAAcqE,OAAQ,GAAIzJ,GAA7J,0BAAuB0J,EAAvB,EAAS7D,aAAiC8D,EAA1C,EAA+B5D,UAAyC6D,EAAxE,EAA2D3G,YAAkC4G,EAA7F,KACA,EAAyHpE,GAAcL,EAAc0E,OAAQ,GAAI9J,GAAjK,0BAAuB+J,EAAvB,EAASlE,aAAkCmE,EAA3C,EAAgCjE,UAA0CkE,EAA1E,EAA6DhH,YAAmCiH,EAAhG,KACA,EAAiIzE,GAAcL,EAAc+E,SAAU,GAAInK,GAA3K,0BAAuBoK,EAAvB,EAASvE,aAAoCwE,EAA7C,EAAkCtE,UAA4CuE,EAA9E,EAAiErH,YAAqCsH,EAAtG,KACA,EAAiI9E,GAAcL,EAAcoF,SAAU,GAAIxK,GAA3K,0BAAuByK,GAAvB,EAAS5E,aAAoC6E,GAA7C,EAAkC3E,UAA4C4E,GAA9E,EAAiE1H,YAAqC2H,GAAtG,KACA,GAAyInF,GAAcL,EAAcyF,WAAY,GAAI7K,GAArL,8BAAuB8K,GAAvB,GAASjF,aAAsCkF,GAA/C,GAAoChF,UAA8CiF,GAAlF,GAAqE/H,YAAuCgI,GAA5G,MACA,GAAqJxF,GAAcL,EAAc8F,eAAgB,GAAIlL,GAArM,8BAAuBmL,GAAvB,GAAStF,aAAyCuF,GAAlD,GAAuCrF,UAAiDsF,GAAxF,GAA2EpI,YAA0CqI,GAArH,MACA,GAAyH7F,GAAcL,EAAcmG,OAAQ,GAAIvL,GAAjK,8BAAuBwL,GAAvB,GAAS3F,aAAkC4F,GAA3C,GAAgC1F,UAA0C2F,GAA1E,GAA6DzI,YAAmC0I,GAAhG,MAEA,OAAI5O,EACM,6CAENC,EACM,gDAIP,eAAC,GAAD,WACG,cAAC,GAAD,6HACA,eAAC,GAAD,WACG,cAAC,GAAD,CAAWX,KAAMsM,EAAWrC,MAAM,yDAAYP,UAAW6C,EAAoB3F,YAAa4F,EAAsBzF,eAAgB0F,IAChI,cAAC,GAAD,CAAWzM,KAAM2M,EAAQ1C,MAAM,uCAASP,UAAWkD,EAAiBhG,YAAaiG,EAAmB9F,eAAgB+F,IACpH,cAAC,GAAD,CAAW9M,KAAMgN,EAAW/C,MAAM,qEAAcP,UAAWuD,EAAoBrG,YAAasG,EAAsBnG,eAAgBoG,IAClI,cAAC,GAAD,CAAWnN,KAAMqN,EAAQpD,MAAM,yDAAYP,UAAW4D,EAAiB1G,YAAa2G,EAAmBxG,eAAgByG,IACvH,cAAC,GAAD,CAAWxN,KAAM0N,EAASzD,MAAM,yDAAYP,UAAWiE,EAAkB/G,YAAagH,EAAoB7G,eAAgB8G,IAC1H,cAAC,GAAD,CAAW7N,KAAM+N,EAAW9D,MAAM,yDAAYP,UAAWsE,EAAoBpH,YAAaqH,EAAsBlH,eAAgBmH,IAChI,cAAC,GAAD,CAAWlO,KAAMoO,GAAWnE,MAAM,yDAAYP,UAAW2E,GAAoBzH,YAAa0H,GAAsBvH,eAAgBwH,KAChI,cAAC,GAAD,CAAWvO,KAAMyO,GAAaxE,MAAM,qEAAcP,UAAWgF,GAAsB9H,YAAa+H,GAAwB5H,eAAgB6H,KACxI,cAAC,GAAD,CAAW5O,KAAM8O,GAAgB7E,MAAM,oGAAoBP,UAAWqF,GAAyBnI,YAAaoI,GAA2BjI,eAAgBkI,KACvJ,cAAC,GAAD,CAAWjP,KAAMmP,GAASlF,MAAM,+DAAaP,UAAW0F,GAAkBxI,YAAayI,GAAoBtI,eAAgBuI,YAQjIC,GAAO5S,IAAOC,IAAV,2IAOJ4S,GAAY7S,IAAO8S,GAAV,qEAITC,GAAW/S,IAAOiC,GAAV,4FAKR+Q,GAAWhT,IAAOW,GAAV,+GAMRsS,GAAYjT,IAAOC,IAAV,0PAaTiT,GAAWlT,YAAOoC,IAAPpC,CAAH,mGAMRmT,GAAY,SAAC,GAA6D,IAA3D9P,EAA0D,EAA1DA,KAAMiK,EAAoD,EAApDA,MAAOP,EAA6C,EAA7CA,UAAW9C,EAAkC,EAAlCA,YAAaG,EAAqB,EAArBA,eACvD,OAAI/G,EAAKoH,OAEH,eAACmI,GAAD,WACG,cAACC,GAAD,UAAYvF,IACZ,cAACyF,GAAD,UACI1P,EAAK+C,KAAI,SAAAC,GACP,OACG,eAAC2M,GAAD,WACG,cAACC,GAAD,UACG,qBAAKpN,IAAKQ,EAAKP,UAAWC,IAAKM,EAAKL,QAAUK,EAAKJ,WAEtD,cAACiN,GAAD,CAAUhS,GAAE,gBAAWmF,EAAK+M,SAA5B,SAAyC/M,EAAKL,QAAUK,EAAKJ,WAJjDI,EAAK+M,cAS7B,cAAC,GAAD,CAAiBpH,WAAYe,EAAW9C,YAAaA,EAAaG,eAAgBA,OAIpF,MC5HJrI,GAAY/B,IAAOwJ,MAAV,qKAQThH,GAASxC,IAAOqT,GAAV,gIAONrR,GAAOhC,IAAOiC,GAAV,uIAOJvB,GAAOV,IAAOW,GAAV,qDAGJwB,GAAanC,YAAOoC,IAAPpC,CAAH,yDAGV8O,GAAU9O,IAAOC,IAAV,6IAQP4O,GAAQ7O,IAAO+O,IAAV,0FAoCIuE,GA9BKC,IAAMC,MAAK,YAA8C,IAA3CzP,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,WAAYuC,EAAmB,EAAnBA,MAAO+G,EAAY,EAAZA,MAC7D,OAAIvJ,EACM,6CAENC,EACM,6CAENuC,GAA0B,IAAjBA,EAAMkE,OACT,KAGP,eAAC,GAAD,WACG,cAAC,GAAD,UAAS6C,IACT,cAAC,GAAD,UACI/G,GAASA,EAAMH,KAAI,SAACC,GAClB,OACG,cAAC,GAAD,UACG,cAAC,GAAD,CAAYnF,GAAE,gBAAWmF,EAAKoN,aAAepN,EAAKI,QAAlD,SACG,cAAC,GAAD,UACG,cAAC,GAAD,CAAOZ,IAAKQ,EAAKqN,iBAAkB3N,IAAKM,EAAKL,cAH3CK,EAAKoN,aAAepN,EAAKI,mBCjDhD1E,GAAY/B,IAAOC,IAAV,+GA0BA0T,GAnBF,SAAC,GAAqB,IAAnBxM,EAAkB,EAAlBA,MAAOH,EAAW,EAAXA,KAEpB,OACG,eAAC,GAAD,WACG,cAAC,GAAD,CAAM3D,KAAM8D,EAAMY,SAAS1E,KAAMU,UAAWoD,EAAMY,SAAShE,UAAWC,WAAYmD,EAAMY,SAAS/D,aACjG,cAAC,GAAD,CAAauC,MAAOY,EAAMkB,aAAahF,KAAKqI,MAAO3H,UAAWoD,EAAMkB,aAAatE,UAAWC,WAAYmD,EAAMkB,aAAarE,WAAYsJ,MAAM,oFAC7I,cAAC,GAAD,CAAOjK,KAAM8D,EAAMc,UAAU5E,KAAMU,UAAWoD,EAAMc,UAAUlE,UAAWC,WAAYmD,EAAMc,UAAUjE,aACrG,cAAC,GAAD,CAAWX,KAAM8D,EAAMgB,eAAe9E,KAAMU,UAAWoD,EAAMgB,eAAepE,UAAWC,WAAYmD,EAAMgB,eAAenE,aACxH,cAAC,GAAD,CAAOX,KAAM8D,EAAMqB,UAAUnF,KAAMU,UAAWoD,EAAMqB,UAAUzE,UAAWC,WAAYmD,EAAMqB,UAAUxE,WAAYgD,KAAMA,IAEvH,cAAC,GAAD,CAAS3D,KAAM8D,EAAMa,YAAY3E,KAAMU,UAAWoD,EAAMa,YAAYjE,UAAWC,WAAYmD,EAAMa,YAAYhE,WAAYgD,KAAMA,IAC/H,cAAC,GAAD,CAAQ3D,KAAM8D,EAAMiB,WAAW/E,KAAMU,UAAWoD,EAAMiB,WAAWrE,UAAWC,WAAYmD,EAAMiB,WAAWpE,WAAYgD,KAAMA,IAC3H,cAAC,GAAD,CAAQ3D,KAAM8D,EAAMmB,WAAWjF,KAAMU,UAAWoD,EAAMmB,WAAWvE,UAAWC,WAAYmD,EAAMmB,WAAWtE,WAAYgD,KAAMA,IAC3H,cAAC,GAAD,CAAS3D,KAAM8D,EAAMoB,YAAYlF,KAAMU,UAAWoD,EAAMoB,YAAYxE,UAAWC,WAAYmD,EAAMoB,YAAYvE,iBChBvG4P,GAZO,SAAC,GAAe,IAC7B5M,EAD4B,EAAZD,MACH/D,OAAOgE,KACpBI,EAAWC,cACXwM,EAAY3M,aAAY,SAAAC,GAAK,OAAIA,EAAM2M,YAO7C,OANAxM,qBAAU,WAEP,OADAF,ElBuEqB,SAAC5D,GACzB,IAAMuQ,EAAc,CACjBhM,SAAS,mBAAD,OAAqBvE,GAC7BwE,YAAY,mBAAD,OAAqBxE,EAArB,YACXyE,UAAU,mBAAD,OAAqBzE,EAArB,UACT0E,YAAY,mBAAD,OAAqB1E,EAArB,kBACX2E,eAAe,mBAAD,OAAqB3E,EAArB,eACd4E,WAAW,mBAAD,OAAqB5E,EAArB,WACV6E,aAAa,mBAAD,OAAqB7E,EAArB,aACZ8E,WAAW,mBAAD,OAAqB9E,EAArB,WACV+E,YAAY,0BAAD,OAA4B/E,GACvCgF,UAAU,wBAAD,OAA0BhF,IAGtC,8CAAO,WAAO4D,GAAP,eAAAlE,EAAA,6DAAAA,EAAA,KACe6Q,GADf,qDACO1N,EADP,oBAGEe,EAASsB,IAAuB,EAAMrC,IAHxC,KAIEe,EAJF,KAIWqB,GAJX,SAI+BnF,GAAYyQ,EAAY1N,IAJvD,wBAI+DA,EAJ/D,0FAOEkB,QAAQC,IAAI,KAAMC,SAClBL,EAASuB,GAAwB,EAAD,GAAQtC,IACxCe,EAASsB,IAAuB,EAAOrC,IATzC,iFAAP,sDkBrFY2N,CAAYhN,IACd,WACJI,ElBmE6B,CAAEvF,KAAMiG,QkBjExC,CAACV,EAAUJ,IACP,cAAC,GAAD,CAAMG,MAAO0M,EAAW7M,KAAMA,KCblCiN,GAAe,eACfC,GAA0B,0BAC1BC,GAA2B,2BAC3BC,GAA4B,4BAC5BC,GAAiB,iBAEjBxQ,GAAe,CAClB0C,MAAO,GACP+N,WAAY,EACZvQ,UAAW,KACXC,WAAY,KACZiG,YAAa,GAsCT,IAEMsK,GAAyB,SAACnQ,GAAD,MAAW,CAAEvC,KAAMqS,GAAyBhQ,QAASE,ICnDrFoQ,GAAY,YACZC,GAAuB,uBACvBC,GAAwB,wBACxBC,GAAyB,yBACzBC,GAAa,aAEb/Q,GAAe,CAClB0C,MAAO,GACP+N,WAAY,EACZvQ,UAAW,KACXC,WAAY,KACZiG,YAAa,GAwCT,I,2BAEM4K,GAAsB,SAACzQ,GAAD,MAAW,CAAEvC,KAAM4S,GAAsBvQ,QAASE,IAIxE0Q,GAAwB,SAACtF,GAAD,MAAW,CAAE3N,KAAM8S,GAAwBzQ,QAASsL,IC/B1EuF,GA1BO,SAACC,EAAM/K,GAC1B,MAA4B3J,mBAAS,IAArC,mBAAO0C,EAAP,KAAeiS,EAAf,KACA,EAA0B3U,mBAAS,IAAnC,mBAAOgN,EAAP,KAAc4H,EAAd,KAqBA,OAnBA5N,qBAAU,WACP,OAAQ0N,GACL,IAAK,IACFC,EAAU,CAAEpT,KAAM,qBAAsB2N,KAAMvF,IAC9CiL,EAAS,sGACT,MACH,IAAK,YACFD,EAAU,CAAEpT,KAAM,wBAAyB2N,KAAMvF,IACjDiL,EAAS,8HACT,MACH,IAAK,SACFD,EAAU,CAAEpT,KAAM,kBAAmB2N,KAAMvF,IAC3CiL,EAAS,2HAKf,CAACjL,EAAa+K,IAEV,CAAChS,EAAQsK,ICpBbvL,GAAY/B,IAAOwJ,MAAV,qKAQThH,GAASxC,IAAOmV,GAAV,sJAQNnT,GAAOhC,IAAOiC,GAAV,kJAOJvB,GAAOV,IAAOW,GAAV,qDAGJwB,GAAanC,YAAOoC,IAAPpC,CAAH,yDAGVoV,GAAUpV,IAAOC,IAAV,kIAQP4O,GAAQ7O,IAAO+O,IAAV,wFAKLzM,GAActC,IAAOC,IAAV,+WAqDFoV,GAlCM,SAAC,GAAsF,IAApFtR,EAAmF,EAAnFA,UAAWC,EAAwE,EAAxEA,WAAYuC,EAA4D,EAA5DA,MAAO+G,EAAqD,EAArDA,MAAOtB,EAA8C,EAA9CA,WAAY/B,EAAkC,EAAlCA,YAAaG,EAAqB,EAArBA,eACnF,OAAIrG,EACM,6CAENC,EACM,6CAGP,eAAC,GAAD,WACG,cAAC,GAAD,UAASsJ,IACT,cAAC,GAAD,UACI/G,EAAMH,KAAI,SAACC,GACT,OACG,cAAC,GAAD,UACG,cAAC,GAAD,CAAYnF,GAAE,gBAAWmF,EAAKI,QAA9B,SACG,eAAC2O,GAAD,WACG,cAAC,GAAD,CAAOvP,IAAKQ,EAAKqN,iBAAkB3N,IAAKM,EAAKL,SAC7C,eAAC,GAAD,WACG,6BAAKK,EAAKL,SACV,qDAASK,EAAK3B,QACd,2GAAkB2B,EAAK0D,cACvB,6EAAa1D,EAAKO,mBARnBP,EAAKI,aAgBzB,cAAC,GAAD,CAAYuF,WAAYA,EAAY/B,YAAaA,EAAaG,eAAgBA,QC/ExEkL,GAXF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,cAAeC,EAA2C,EAA3CA,cAAelI,EAA4B,EAA5BA,MAAOlD,EAAqB,EAArBA,eAElD,OACG,gCACG,cAAC,GAAD,CAAarG,UAAWyR,EAAczR,UAAWC,WAAYwR,EAAcxR,WAAYuC,MAAOiP,EAAcjP,MAAO+G,MAAM,kJACzH,cAAC,GAAD,CAAcvJ,UAAWwR,EAAcxR,UAAWC,WAAYuR,EAAcvR,WAAYuC,MAAOgP,EAAchP,MAAOyF,WAAYuJ,EAAcjB,WAAYhH,MAAOA,EAAOrD,YAAasL,EAActL,YAAaG,eAAgBA,QC6B1NqL,GA9BO,SAAC,GAAe,IAAb1O,EAAY,EAAZA,MAChByO,EAAgBtO,aAAY,SAAAC,GAAK,OAAIA,EAAMuO,YAC3CH,EAAgBrO,aAAY,SAAAC,GAAK,OAAIA,EAAMwO,YAC3CvO,EAAWC,cACjB,EAAoC/G,mBAASyG,EAAMiO,MAAnD,mBAAO9J,EAAP,KAAmBC,EAAnB,KACA,EAAwB4J,GAAchO,EAAMiO,KAAMO,EAActL,aAAhE,mBAAOjH,EAAP,KAAesK,EAAf,KAoBA,OAfAhG,qBAAU,WACH4D,IAAenE,EAAMiO,OACtB5N,EAAS0N,GAAsB,IAC/B3J,EAAcpE,EAAMiO,SAEvB,CAAC5N,EAAUL,EAAMiO,KAAM9J,IAG1B5D,qBAAU,WACPF,ELiCqB,SAACpE,EAAQC,GACjC,8CAAO,WAAOmE,GAAP,eAAAlE,EAAA,sEAEDkE,EAASmN,IAAuB,IAF/B,SAGsBxR,GAAYC,EAAQC,GAH1C,OAGKG,EAHL,OAIDgE,EAf+B,CAAEvF,KAAMoS,GAAc/P,QAe9Bd,IAJtB,gDAODmE,QAAQC,IAAI,KAAMC,SAClBL,GAf+BM,EAeE,EAAD,GAfU,CAAE7F,KAAMsS,GAA0BjQ,QAASwD,KAgBrFN,EAASmN,IAAuB,IAT/B,kCAP6B,IAAC7M,IAO9B,oBAAP,sDKlCYkO,CAAYjR,KAAD,8BACpByC,EJkCkB,SAACpE,EAAQC,GAC9B,8CAAO,WAAOmE,GAAP,eAAAlE,EAAA,sEAEDkE,EAASyN,IAAoB,IAF5B,SAGsB9R,GAAYC,EAAQC,GAH1C,OAGKG,EAHL,OAIDgE,EAf4B,CAAEvF,KAAM2S,GAAWtQ,QAe3Bd,IAJnB,gDAODmE,QAAQC,IAAI,KAAMC,SAClBL,GAf4BM,EAeE,EAAD,GAfU,CAAE7F,KAAM6S,GAAuBxQ,QAASwD,KAgB/EN,EAASyN,IAAoB,IAT5B,kCAP0B,IAACnN,IAO3B,oBAAP,sDInCYmO,CAAS7S,EAAQ,0BAC1B,CAACoE,EAAUpE,EAAQwS,EAAcvL,cAKjC,cAAC,GAAD,CAAMuL,cAAeA,EAAeD,cAAeA,EAAenL,eApB9C,SAACoF,GACrBpI,EAAS0N,GAAsBtF,KAmBmElC,MAAOA,KCbhGwI,GAfA,WACZ,OACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAO7U,OAAK,EAAC+T,KAAK,IAAIe,UAAWN,KACjC,cAAC,IAAD,CAAOT,KAAK,YAAYe,UAAWN,KACnC,cAAC,IAAD,CAAOT,KAAK,SAASe,UAAWN,KAChC,cAAC,IAAD,CAAOT,KAAK,WAAWe,UAAWN,KAClC,cAAC,IAAD,CAAOT,KAAK,UAAUe,UAAWN,KACjC,cAAC,IAAD,CAAOT,KAAK,cAAce,UAAWnC,KACrC,cAAC,IAAD,CAAOoB,KAAK,cAAce,UAAWlP,KACrC,cAAC,IAAD,CAAU3F,GAAG,UCVhBa,GAAY/B,IAAOC,IAAV,wHAmBA+V,I,GAAAA,GAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,U,2BCZFC,GAAcC,2BAAgB,CACjCR,SROY,WAAwD,IAA/BvO,EAA8B,uDAAtBtD,GAAcsS,EAAQ,uCACnE,OAAQA,EAAOtU,MACZ,KAAKoS,GACF,OAAO,2BACD9M,GADN,IAEGZ,MAAO4P,EAAOjS,QAAQwH,MACtB4I,WAAY6B,EAAOjS,QAAQoQ,WAC3BvQ,WAAW,IAEjB,KAAKmQ,GACF,OAAO,2BACD/M,GADN,IAEGpD,UAAWoS,EAAOjS,UAExB,KAAKiQ,GACF,OAAO,2BACDhN,GADN,IAEGnD,WAAYmS,EAAOjS,UAEzB,KAAKkQ,GACF,OAAO,2BACDjN,GADN,IAEG8C,YAAakM,EAAOjS,UAE1B,KAAKmQ,GACF,OAAO,2BACDlN,GADN,IAEGZ,MAAO,GACP+N,WAAY,IAElB,QACG,OAAOnN,IQrCbwO,SPMY,WAAqD,IAA/BxO,EAA8B,uDAAtBtD,GAAcsS,EAAQ,uCAChE,OAAQA,EAAOtU,MACZ,KAAK2S,GACF,OAAO,2BACDrN,GADN,IAEGZ,MAAO4P,EAAOjS,QAAQqC,MACtB+N,WAAY6B,EAAOjS,QAAQoQ,WAC3BvQ,WAAW,IAEjB,KAAK0Q,GACF,OAAO,2BACDtN,GADN,IAEGpD,UAAWoS,EAAOjS,UAExB,KAAKwQ,GACF,OAAO,2BACDvN,GADN,IAEGnD,WAAYmS,EAAOjS,UAEzB,KAAKyQ,GACF,OAAO,2BACDxN,GADN,IAEG8C,YAAakM,EAAOjS,UAE1B,KAAK0Q,GACF,MAAO,CACJrO,MAAO,GACP+N,WAAY,EACZvQ,UAAW,KACXC,WAAY,KACZiG,YAAa,GAEnB,QACG,OAAO9C,IOtCb2M,S3BiDY,WAAoD,IAA/B3M,EAA8B,uDAAtBtD,GAAcsS,EAAQ,uCAE/D,OAAQA,EAAOtU,MACZ,KAAK8F,GACF,OAAO,2BAAKR,GAAZ,mBAAoBgP,EAAO9P,KAA3B,2BAAuCc,EAAMgP,EAAO9P,OAApD,IAA2DhD,KAAM8S,EAAOjS,QAASH,WAAW,EAAOC,WAAY,SAClH,KAAK4D,GACF,OAAO,2BAAKT,GAAZ,mBAAoBgP,EAAO9P,KAA3B,2BAAuCc,EAAMgP,EAAO9P,OAApD,IAA2DtC,UAAWoS,EAAOjS,YAChF,KAAK2D,GACF,OAAO,2BAAKV,GAAZ,mBAAoBgP,EAAO9P,KAA3B,2BAAuCc,EAAMgP,EAAO9P,OAApD,IAA2DrC,WAAYmS,EAAOjS,YACjF,KAAK4D,GACF,OAAOjE,GACV,QACG,OAAOsD,I2B5DbF,O/BCY,WAAsD,IAA/BE,EAA8B,uDAAtBtD,GAAcsS,EAAQ,uCAEjE,OAAQA,EAAOtU,MACZ,KAAK4B,GACF,OAAO,2BACD0D,GADN,IAEGrD,WAAYqS,EAAOjS,QACnBH,WAAW,IAEjB,KAAKL,GACF,OAAO,2BACDyD,GADN,IAEGpD,UAAWoS,EAAOjS,UAExB,KAAKP,GACF,OAAO,2BACDwD,GADN,IAEGnD,WAAYmS,EAAOjS,UAEzB,KAAKN,GACF,MAAO,CACJE,WAAY,GACZC,UAAW,KACXC,WAAY,MAElB,QACG,OAAOmD,M+BxBHiP,GAAQC,uBAAYJ,GAAaK,+BAAoBC,2BAAgBC,QCP5EC,GAAcC,YAAH,mJASjBC,IAASC,OACP,eAAC,IAAD,CAAUR,MAAOA,GAAjB,UACE,cAACK,GAAD,IACA,cAAC,GAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.201b2708.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst FilterContainer = styled.div`\n   display: flex;\n   align-items: center;\n   gap: 10px;\n   color: ${props => props.active ? '#fff' : '#999'};\n   font-size: 1.2em;\n   font-weight: 600;\n   cursor: pointer;\n   \n`\nconst Icon = styled.div`\n   font-size: 1.2em;\n`\n\nconst Filter = () => {\n   const [active, setActive] = useState(false)\n\n   const handlerOnClick = () => {\n      setActive(!active)\n   }\n\n   return (\n      <FilterContainer onClick={handlerOnClick} active={active}>\n         <Icon>\n            <ion-icon name=\"options\"></ion-icon>\n         </Icon>\n         <div>Поиск по фильтру</div>\n      </FilterContainer>\n   )\n}\n\nexport default Filter","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Item = styled.li`\n   list-style: none;\n   & a {\n      color: #999;\n      text-decoration: none;\n      font-size: 1.2em;\n      font-weight: 600;\n   }\n   & a.active {\n      color: #fff;\n   }\n`\nconst Content = styled.div`\n   display: flex;\n   align-items: center;\n   gap: 10px;\n   & ion-icon {\n      font-size: 1.2em;\n   }\n`\n\nconst ItemLink = ({ url, text, icon }) => {\n   return (\n      <Item>\n         <NavLink exact to={url}>\n            <Content>\n               <ion-icon name={icon}></ion-icon>\n               <span>{text}</span>\n            </Content>\n         </NavLink>\n      </Item>\n   )\n}\n\nexport default ItemLink","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchContainer = styled.div`\n   position: relative;\n`\nconst Input = styled.input`\n   padding: 5px;\n   border-radius: 10px;\n   width: 250px;\n   outline-style: none;\n   box-shadow: none;\n   border-color: transparent;\n`\nconst Icon = styled.div`\n   position: absolute;\n   right: 10px;\n   top: 50%;\n   transform: translateY(-50%);\n   display: flex;\n   justify-content: center;\n   align-self: center;\n   & ion-icon {\n      color: #555;\n      font-size: 1.2em;\n      cursor: pointer;\n   }\n`\n\nconst Search = () => {\n   const [keyWord, setKeyWord] = useState('')\n   const handlerOnChange = (e) => {\n      const value = e.target.value\n      setKeyWord(value)\n   }\n\n   return (\n      <SearchContainer>\n         <Input value={keyWord} onChange={handlerOnChange} type=\"text\" placeholder='Поиск по ключевым словам' />\n         <Icon>\n            <ion-icon name=\"search\"></ion-icon>\n         </Icon>\n      </SearchContainer>\n   )\n}\n\nexport default Search","import React from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"./components/Filter\";\nimport ItemLink from \"./components/LinkItem\";\nimport Search from \"./components/Search\";\n\nconst Container = styled.div`\n   position: relative;\n   display: flex;\n   margin-left: auto;\n`\nconst List = styled.ul`\n   display: flex;\n   align-items: center;\n   gap: 40px;\n`\n\n\nconst Navbar = () => {\n   return (\n      <Container>\n         <List>\n            <ItemLink url='/' text='Лучшие' icon='thumbs-up' />\n            <ItemLink url='/populars' text='Популярные' icon='heart' />\n            <ItemLink url='/await' text='Ожидаемые' icon='time' />\n            <Search />\n            <Filter />\n         </List>\n      </Container>\n   )\n}\n\n\nexport default Navbar","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst StyledLink = styled(Link)`\n   text-decoration: none;\n`\nconst Container = styled.div`\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   gap: 10px;\n   font-weight: 600;\n   letter-spacing: 0.1em;\n   color: #fff;\n   text-decoration: none;\n`\nconst Number = styled.div`\n   font-size: 3em;\n   text-decoration: none;\n`\nconst Description = styled.div`\n   font-size: 1.2em;\n   width: min-content;\n`\n\nconst Logo = () => {\n   return (\n      <StyledLink to='/'  >\n         <Container>\n            <Number >\n               #3\n            </Number>\n            <Description >\n               Training Project\n            </Description>\n         </Container>\n      </StyledLink>\n   )\n}\n\nexport default Logo","import React from \"react\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport styled from \"styled-components\";\nimport Logo from \"./components/Logo\";\n\nconst Container = styled.div`\n   display: flex;\n   align-items: center;\n   background-color: #222;\n   padding: 20px 40px;\n`\n\nconst Header = () => {\n   return (\n      <Container>\n         <Logo />\n         <Navbar />\n      </Container>\n\n   )\n}\n\nexport default Header","import React from \"react\";\n\nconst Footer = () => {\n   return (\n      <div>Footer</div>\n   )\n}\n\nexport default Footer","import * as axios from 'axios';\n\nconst instance = axios.default.create({\n   baseURL: 'https://kinopoiskapiunofficial.tech',\n   headers: { 'X-API-KEY': '74341885-b5b5-4b9b-b70c-af2e55c868ad' },\n})\n\nexport async function getAllFilms(params, query) {\n   const response = await instance.get(query, {\n      params: params\n   })\n   return response.data\n}\n\nexport async function getFilmData(url) {\n   const response = await instance.get(url)\n   return response.data;\n}\n\nexport async function getPersonData(id) {\n   const response = await instance.get(`/api/v1/staff/${id}`)\n   return response.data;\n}\n\n\n","import { getPersonData } from \"../api/api\"\n\nconst SET_PERSON_DATA = 'SET_PERSON_DATA'\nconst SET_IS_LOADING_PERSON_DATA = 'SET_IS_LOADING_PERSON_DATA'\nconst SET_FETCH_ERROR_PERSON_DATA = 'SET_FETCH_ERROR_PERSON_DATA'\nconst RESET_PERSON_DATA = 'RESET_PERSON_DATA'\n\nconst initialState = {\n   personData: [],\n   isLoading: null,\n   fetchError: null\n}\n\nexport default function personReducer(state = initialState, action) {\n\n   switch (action.type) {\n      case SET_PERSON_DATA:\n         return {\n            ...state,\n            personData: action.payload,\n            isLoading: false\n         }\n      case SET_IS_LOADING_PERSON_DATA:\n         return {\n            ...state,\n            isLoading: action.payload\n         }\n      case SET_FETCH_ERROR_PERSON_DATA:\n         return {\n            ...state,\n            fetchError: action.payload\n         }\n      case RESET_PERSON_DATA:\n         return {\n            personData: [],\n            isLoading: null,\n            fetchError: null\n         }\n      default:\n         return state\n   }\n}\n\nexport const setPersonDataAC = (data) => ({ type: SET_PERSON_DATA, payload: data })\nexport const setIsLoadingPersonDataAC = (bool) => ({ type: SET_IS_LOADING_PERSON_DATA, payload: bool })\nexport const setFetchErrorPersonDataAC = (error) => ({ type: SET_FETCH_ERROR_PERSON_DATA, payload: error })\nexport const resetPersonDataAC = () => ({ type: RESET_PERSON_DATA })\n\nexport const getPersonInfo = (id) => {\n   return async (dispatch) => {\n      try {\n         dispatch(setIsLoadingPersonDataAC(true))\n         dispatch(setPersonDataAC(await getPersonData(id)))\n      } catch (error) {\n         debugger\n         console.log(error.message);\n         dispatch(setFetchErrorPersonDataAC(error))\n         dispatch(setIsLoadingPersonDataAC(false))\n      }\n   }\n}","export const someDate = (data) => {\n   let someDate = new Date(data)\n   return someDate.toLocaleString('ru-RU', { month: 'long', day: 'numeric', year: 'numeric' })\n}\n\nexport const nextData = () => {\n   const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n   let currentYear = new Date().getFullYear()\n   let currentMonth = new Date().getMonth()\n\n   const data = {\n      year: (currentMonth === 11 ? ++currentYear : currentYear).toString(),\n      month: monthNames[currentMonth === 11 ? 0 : ++currentMonth].toUpperCase()\n   }\n   return data\n}\nnextData()","import React from \"react\";\nimport { someDate } from \"../../utils/utils\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Actor = ({ data, isLoading, fetchError }) => {\n   let isMale = data.sex === 'MALE'\n   let birthDescription = `${isMale ? 'Родился' : 'Родилась'} ${someDate(data.birthday)} в ${data.birthplace}.`\n   let deathDescription = data.death ? `${isMale ? 'Скончался' : 'Скончалась'} ${someDate(data.death)} в ${data.deathplace} в возрасте ${data.age}.` : ''\n   let lifeDescription = `${birthDescription} ${deathDescription}`\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <div>\n         <div>\n            <div>\n               <img src={data.posterUrl} alt={data.nameRu || data.nameEn} />\n            </div>\n            <div>\n               <h1>{data.nameRu || data.nameEn}</h1>\n               <h2>{data.profession}</h2>\n               <p>{lifeDescription}</p>\n               {data.facts && (\n                  data.facts.map((item, index) => {\n                     return <p key={index}>{item}</p>\n                  })\n               )}\n            </div>\n         </div>\n         <div>\n            <h2>Фильмография</h2>\n            {data.films && (\n               data.films.map((item, index) => {\n                  return (\n                     <div key={index}>\n                        {item.professionKey === 'ACTOR' && (\n                           <div><Link to={`/film/${item.filmId}`} >{item.nameRu || item.nameEn}</Link>, {item.general ? 'в главной' : 'во второстепенной'} роли <span>{item.description}</span>. Рейтинг фильма на КиноПоиск - {item.rating}</div>\n                        )}\n                     </div>\n                  )\n               })\n            )}\n         </div>\n      </div>\n   )\n}\n\nexport default Actor","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPersonInfo, resetPersonDataAC } from \"../../redusers/personReducer\";\nimport Actor from \"./Actor\";\n\nconst ActorContainer = ({ match }) => {\n   const personId = match.params.slug\n   const person = useSelector(state => state.person)\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getPersonInfo(personId))\n      return () => {\n         dispatch(resetPersonDataAC())\n      }\n   }, [dispatch, personId])\n\n   return <Actor data={person.personData} isLoading={person.isLoading} fetchError={person.fetchError} />\n}\nexport default ActorContainer","import { getFilmData } from \"../api/api\"\n\nconst SET_FILM_DATA = 'SET_FILM_DATA'\nconst SET_IS_LOADING_FILM_DATA = 'SET_IS_LOADING_FILMS_DATA'\nconst SET_FETCH_ERROR_FILM_DATA = 'SET_FETCH_ERROR_FILMS_DATA'\nconst RESET_FILM_DATA = 'RESET_FILM_DATA'\n\nconst initialState = {\n   filmInfo: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmSeasons: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmFacts: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmDistrib: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmBox_office: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmVideos: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmSimilars: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmFrames: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmReviews: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   },\n   filmStaff: {\n      data: [],\n      isLoading: null,\n      fetchError: null\n   }\n}\n\nexport default function filmReducer(state = initialState, action) {\n\n   switch (action.type) {\n      case SET_FILM_DATA:\n         return { ...state, [action.item]: { ...state[action.item], data: action.payload, isLoading: false, fetchError: null } }\n      case SET_IS_LOADING_FILM_DATA:\n         return { ...state, [action.item]: { ...state[action.item], isLoading: action.payload } }\n      case SET_FETCH_ERROR_FILM_DATA:\n         return { ...state, [action.item]: { ...state[action.item], fetchError: action.payload } }\n      case RESET_FILM_DATA:\n         return initialState\n      default:\n         return state\n   }\n}\n\nexport const setFilmInfoAC = (data, item) => ({ type: SET_FILM_DATA, payload: data, item })\nexport const setIsLoadingFilmInfoAC = (bool, item) => ({ type: SET_IS_LOADING_FILM_DATA, payload: bool, item })\nexport const setFetchErrorFilmInfoAC = (error, item) => ({ type: SET_FETCH_ERROR_FILM_DATA, payload: error, item })\nexport const resetFilmDataAC = () => ({ type: RESET_FILM_DATA })\n\nexport const getFilmInfo = (id) => {\n   const requestData = {\n      filmInfo: `/api/v2.2/films/${id}`,\n      filmSeasons: `/api/v2.2/films/${id}/seasons`,\n      filmFacts: `/api/v2.2/films/${id}/facts`,\n      filmDistrib: `/api/v2.2/films/${id}/distributions`,\n      filmBox_office: `/api/v2.2/films/${id}/box_office`,\n      filmVideos: `/api/v2.2/films/${id}/videos`,\n      filmSimilars: `/api/v2.2/films/${id}/similars`,\n      filmFrames: `/api/v2.1/films/${id}/frames`,\n      filmReviews: `/api/v1/reviews?filmId=${id}`,\n      filmStaff: `/api/v1/staff?filmId=${id}`\n   }\n\n   return async (dispatch) => {\n      for (const item in requestData) {\n         try {\n            dispatch(setIsLoadingFilmInfoAC(true, item))\n            dispatch(setFilmInfoAC(await getFilmData(requestData[item]), item))\n         } catch (error) {\n            debugger\n            console.log(error.message);\n            dispatch(setFetchErrorFilmInfoAC(error, item))\n            dispatch(setIsLoadingFilmInfoAC(false, item))\n         }\n      }\n   }\n}\n\n\n\n\n\n      // data: `/api/v2.2/films/${id}`,\n      // seasons: `/api/v2.2/films/${id}/seasons`,\n      // facts: `/api/v2.2/films/${id}/facts`,\n      // distributions: `/api/v2.2/films/${id}/distributions`,\n      // box_office: `/api/v2.2/films/${id}/box_office`,\n      // videos: `/api/v2.2/films/${id}/videos`,\n      // similars: `/api/v2.2/films/${id}/similars`,\n      // frames: `/api/v2.1/films/${id}/frames`,\n      // reviews: `/api/v1/reviews?filmId=${id}`,\n      // staff: `/api/v1/staff?filmId=${id}`","import { useState, useEffect } from \"react\";\n\nconst useObjectToString = (object, value) => {\n   const [string, setString] = useState('')\n\n   useEffect(() => {\n      if (object) {\n         const array = []\n         object.forEach(item => {\n            array.push(item[value]);\n         })\n         setString(array.join(', '))\n      }\n   }, [object, value])\n\n\n   return [string]\n}\n\nexport default useObjectToString","import React from \"react\";\nimport styled from \"styled-components\";\nimport useObjectToString from \"../../../hooks/useObjectToString\";\n\n\nconst Container = styled.section`\n   display: flex;\n   align-items: flex-start; \n   gap: 20px;\n`\nconst Poster = styled.div`\n   flex-shrink: 0;\n   flex-basis: 240px;\n   height: 320px;\n   position: relative;\n   border-radius: 10px;\n   overflow: hidden;\n   img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n   }\n`\nconst Desc = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 10px;\n   flex-grow: 1;\n   h1 {\n      margin: 0;\n      padding: 0;\n      font-size: 2.5em;\n      font-weight: 700;\n      color: #333;\n      text-transform: uppercase;\n   }\n   h2 {\n      margin: 0;\n      padding: 0;\n      color: #444;\n      font-style: italic;\n      font-size: 1.5em;\n   }\n   p {\n      color: #555;\n      text-align: justify;\n      font-size: 1.2em;\n   }\n`\nconst Aside = styled.aside`\n   display: flex;\n   flex-basis: 300px;\n   flex-shrink: 0;\n   flex-grow: 0;\n\n   flex-direction: column;\n   gap: 5px;\n   padding: 10px;\n   border-radius: 10px;\n   background-color: #555;\n   color: #ddd;\n   font-size: 1.1em;\n   div span:first-child {\n      margin-right: 5px;\n   }\n`\n\nconst Info = ({ data, isLoading, fetchError }) => {\n\n   const [countries] = useObjectToString(data.countries, 'country')\n   const [genres] = useObjectToString(data.genres, 'genre')\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <Container>\n         <Poster>\n            <img src={data.posterUrl} alt={data.nameRu} />\n         </Poster>\n         <Desc>\n            <h1>{data.nameRu} / {data.nameOriginal}</h1>\n            <h2>{data.slogan}</h2>\n            <p>{data.description}</p>\n         </Desc>\n         <Aside>\n            <div>\n               <span>Рейтинг КиноПоиск:</span>\n               <span>{data.ratingKinopoisk}</span>\n            </div>\n            <div>\n               <span>Год выпуска:</span>\n               <span>{data.year}</span>\n            </div>\n            <div>\n               <span>Продолжительность:</span>\n               <span>{data.filmLength} мин.</span>\n            </div>\n            <div>\n               <span>Страна:</span>\n               <span>{countries}</span>\n            </div>\n            <div>\n               <span>Жанр:</span>\n               <span>{genres}</span>\n            </div>\n         </Aside>\n      </Container>\n   )\n}\n\nexport default Info","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n   display: flex;\n   gap: 10px;\n   justify-content: start;\n`\nconst Page = styled.div`\n   cursor: pointer;\n   color: ${props => props.currentPage ? '#aaa' : '#333'};\n`\nconst Arrow = styled.div`\n   cursor: pointer;\n   color: orangered;\n`\n\nlet SectionPagination = ({ data, currentPage, setCurrentPage, portionSize = 10 }) => {\n\n   const portionCount = Math.ceil(data.length / portionSize)\n   let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize))\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n   let rigthPortionPageNumber = portionNumber * portionSize\n\n   useEffect(() => {\n      setPortionNumber(1)\n   }, [])\n\n   return <Container >\n      {portionNumber > 1 && <Arrow onClick={() => { setPortionNumber(portionNumber - 1) }}>&#10094;</Arrow>}\n      {data.length > 1 && data\n         .filter((item, index) => {\n            return index + 1 >= leftPortionPageNumber && index + 1 <= rigthPortionPageNumber\n         })\n         .map((item, index) => {\n            return (\n               <Page key={item.number} onClick={e => { setCurrentPage(item.number) }} currentPage={currentPage === item.number} >\n                  <h3 >Сезон {item.number}</h3>\n               </Page>\n            )\n         })}\n      {portionCount > portionNumber && <Arrow onClick={() => { setPortionNumber(portionNumber + 1) }} >&#10095;</Arrow>}\n   </Container>\n}\n\nexport default SectionPagination;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SectionPagination from \"./Components/SectionPagination\";\nimport { someDate } from \"../../../../utils/utils\";\n\nconst Container = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 20px;\n`\nconst Content = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 10px;\n`\nconst Episod = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 5px;\n   & h4 {\n      color: #444;\n      font-size: 1em;\n   }\n   & p {\n      font-style: italic;\n      font-size: 1em;\n   }\n   & div {\n      color: orangered;\n   }\n`\n\n\nconst Seasons = ({ data, isLoading, fetchError, slug }) => {\n   const [activePath, setActivePath] = useState(slug)\n   useEffect(() => {\n      if (activePath !== slug) {\n         setActiveSeason(1)\n         setActivePath(slug)\n      }\n   }, [slug, activePath])\n\n   const [activeSeason, setActiveSeason] = useState(1)\n   const [seasonData, setSeasonData] = useState(null)\n   const isSerial = data.length !== 0 && data.total !== 0\n\n   useEffect(() => {\n      if (data.length !== 0) {\n         const item = data.items[activeSeason - 1]\n         setSeasonData(item)\n      }\n   }, [data, activeSeason])\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <>\n         {isSerial && (\n            <Container>\n               <SectionPagination data={data.items} currentPage={activeSeason} setCurrentPage={setActiveSeason} portionSize={2} />\n               <Content>\n                  {seasonData && seasonData.episodes.map(item => {\n                     return (\n                        <Episod key={item.episodeNumber}>\n                           <h4>{`Эпизод ${item.episodeNumber} ${item.nameRu ? item.nameRu : ''}`}</h4>\n                           {item.synopsis && <p>{item.synopsis}</p>}\n                           <div>Дата выхода: {someDate(item.releaseDate)}</div>\n                        </Episod>\n                     )\n                  })}\n               </Content>\n            </Container>\n         )}\n      </>\n   )\n}\n\nexport default Seasons","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n   display: flex;\n   flex-direction: row;\n   flex-wrap: wrap;\n   align-items: center;\n   gap: 20px;\n`\nconst Item = styled.li`\n   cursor: pointer;\n   list-style: none;\n   font-size: 1.2em;\n   width: 40px;\n   height: 40px;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   border-radius: 50%;\n   border: 2px solid ${props => props.item === props.currentPage ? '#bbb' : '#333'};\n   color: ${props => props.item === props.currentPage ? '#bbb' : '#333'};\n`\n\nconst Pagination = ({ totalCount, currentPage, setCurrentPage }) => {\n   const pages = []\n   if (totalCount) {\n      for (let index = 1; index <= totalCount; index++) {\n         pages.push(index)\n      }\n   }\n\n   if (pages.length < 2) {\n      return null\n   }\n\n   return (\n      <List>\n         {pages.map(item => {\n            return (\n               <Item key={item} onClick={e => { setCurrentPage(item) }} item={item} currentPage={currentPage} >{item}</Item>\n            )\n         })}\n      </List>\n   )\n}\n\nexport default Pagination","import { useState, useEffect } from \"react\"\n\nconst useFilteredObject = (data, key) => {\n   const [filteredOject, setFilteredObjectSlice] = useState({})\n\n   useEffect(() => {\n      if (data) {\n         const newObject = data.reduce((accum, item) => {\n            if (!(item[key] in accum)) accum[item[key]] = []\n            accum[item[key]].push(item)\n            return accum\n         }, [])\n         setFilteredObjectSlice(newObject)\n      }\n   }, [data, key])\n\n   return [filteredOject]\n}\n\nexport default useFilteredObject","import { useState, useEffect } from \"react\";\n\nconst usePagination = (data, limit, slug) => {\n   const [activeSlug, setActiveSlug] = useState(null)\n   const [currentPage, setCurrentPage] = useState(1)\n   const [slicedObject, setSlicedObject] = useState([])\n   const [totalPage, setTotalPage] = useState()\n\n   useEffect(() => {\n      if (activeSlug !== slug) {\n         setCurrentPage(1)\n         setActiveSlug(slug)\n      }\n   }, [slug, activeSlug])\n\n   useEffect(() => {\n      let start = (currentPage - 1) * limit\n      let end = start + limit\n      if (data) {\n         let newData = data.slice(start, end)\n         setSlicedObject(newData)\n         setTotalPage(Math.ceil(data.length / limit))\n      }\n      return () => {\n         setSlicedObject([])\n         setTotalPage()\n      }\n   }, [data, currentPage, limit])\n\n   return [{ slicedObject, totalPage, currentPage }, setCurrentPage]\n}\n\nexport default usePagination","import React from \"react\";\nimport styled from \"styled-components\";\nimport Pagination from \"../../../components/Pagination\";\nimport useFilteredObject from \"../../../hooks/useFilteredObject\";\nimport usePagination from \"../../../hooks/usePagination\";\n\nconst Container = styled.section`\n   display: flex;\n   flex-direction: column;\n   gap: 20px;\n`\nconst Content = styled.div`\n   h3 {\n      font-size: 1.5em;\n      color: #444;\n      margin: 0;\n      padding: 0 0 10px 0;\n   }\n   ul {\n      display: flex;\n      flex-direction: column;\n      justify-content:center;\n      gap: 5px;\n   } li {\n      list-style: none;\n   } a {\n      text-decoration: none;\n      color: orangered;\n   }\n`\n\nconst Facts = ({ data, isLoading, fetchError }) => {\n   const [filteredOject] = useFilteredObject(data.items, 'type')\n   const [{ slicedObject: facts, totalPage: totalPageFacts, currentPage: currentPageFacts }, setCurrentPageFacts] = usePagination(filteredOject.FACT, 10)\n   const [{ slicedObject: bloopers, totalPage: totalPageBloopers, currentPage: currentPageBloopers }, setCurrentPageBloopers] = usePagination(filteredOject.BLOOPER, 10)\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <Container>\n         {facts.length > 0 && (\n            <FactItem data={facts} totalPage={totalPageFacts} currentPage={currentPageFacts} setCurrentPage={setCurrentPageFacts} title='Факты о фильме' />\n         )}\n         {bloopers.length > 0 && (\n            <FactItem data={bloopers} totalPage={totalPageBloopers} currentPage={currentPageBloopers} setCurrentPage={setCurrentPageBloopers} title='Киноляпы' />\n         )}\n      </Container>\n   )\n}\n\nconst FactItem = ({ data, title, totalPage, currentPage, setCurrentPage }) => {\n\n   return (\n      <>\n         <Content>\n            <h3>{title}</h3>\n            {data && (\n               <ul>\n                  {data.map((item, index) => {\n                     return (\n                        <li key={index} dangerouslySetInnerHTML={{ __html: item.text }} ></li>\n                     )\n                  })}\n               </ul>\n            )}\n\n         </Content>\n         <Pagination totalCount={totalPage} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      </>\n   )\n}\n\nexport default Facts","import React from \"react\";\n\nconst BoxOffice = ({ data, isLoading, fetchError }) => {\n   \n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <div>\n         <h2>Бюджет и кассовые сборы</h2>\n         <BoxItem title='Бюджет фильма' type='BUDGET' data={data.items} />\n         <BoxItem title='Сборы в мире' type='WORLD' data={data.items} />\n         <BoxItem title='Сборы в США' type='USA' data={data.items} />\n         <BoxItem title='Сборы в России' type='RUS' data={data.items} />\n      </div>\n   )\n}\n\nconst BoxItem = ({data, title, type}) => {\n   return (\n      <h4>\n            {title}: {data?.map(item => {\n               if (item.type === type) {\n                  return `${item.symbol}${item.amount}`\n               }\n               return null\n            })}\n         </h4>\n   )\n}\n\nexport default BoxOffice","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n   display: flex;\n   gap: 10px;\n   justify-content: start;\n`\nconst Page = styled.div`\n   cursor: pointer;\n   color: ${props => props.currentPage ? '#aaa' : '#333'};\n`\nconst Arrow = styled.div`\n   cursor: pointer;\n   color: orangered;\n`\n\nlet SectionPagination = ({ data, currentPage, setCurrentPage, portionSize = 10 }) => {\n\n   const portionCount = Math.ceil(data?.length / portionSize)\n   let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize))\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n   let rigthPortionPageNumber = portionNumber * portionSize\n\n   useEffect(() => {\n      setPortionNumber(1)\n   }, [])\n\n   return <Container >\n      {portionNumber > 1 && <Arrow onClick={() => { setPortionNumber(portionNumber - 1) }}>&#10094;</Arrow>}\n      {data?.length > 1 && data\n         .filter((item, index) => {\n            return index + 1 >= leftPortionPageNumber && index + 1 <= rigthPortionPageNumber\n         })\n         .map((item, index) => {\n            return (\n               <Page onClick={e => { setCurrentPage(item.url) }} key={item.url} currentPage={currentPage === item.url} ><h4>{item.name}</h4></Page>\n            )\n         })}\n      {portionCount > portionNumber && <Arrow onClick={() => { setPortionNumber(portionNumber + 1) }} >&#10095;</Arrow>}\n   </Container>\n}\n\nexport default SectionPagination;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SectionPagination from \"./Components/SectionPagination\";\n\nconst Container = styled.section`\n   display: flex;\n   flex-direction: column;\n   gap: 10px;\n`\n\nconst Videos = ({ data, isLoading, fetchError, slug }) => {\n\n   const [url, setUrl] = useState('')\n\n   useEffect(() => {\n      if (data.items) {\n         setUrl(data.items[0]?.url)\n      }\n   }, [data.items])\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <>\n         {data.total > 0 && (\n            <Container>\n               {data.items && <SectionPagination data={data.items} currentPage={url} setCurrentPage={setUrl} portionSize={5} />}\n               <video src={url} width='50%' controls />\n            </Container>\n         )}\n      </>\n   )\n}\n\nexport default Videos","import React from \"react\";\nimport styled from \"styled-components\";\nimport Pagination from \"../../../components/Pagination\";\nimport usePagination from \"../../../hooks/usePagination\";\n\nconst Container = styled.section`\n   display: flex;\n   flex-direction: column;\n   gap: 10px;\n`\nconst Title = styled.h3`\n   color: #333;\n   font-size: 1.2em;\n`\nconst Content = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   gap: 20px;\n`\nconst Image = styled.div`\n   flex-basis: 300px;\n   width: 300px;\n   height: 200px;\n   position: relative;\n`\nconst Picture = styled.img`\n   width: 100%;\n   max-width: 100%;\n   height: 100%;\n   object-fit: cover;\n   object-position: 50% 0;\n`\n\nconst Frames = ({ data, isLoading, fetchError, slug }) => {\n   const [{ slicedObject, totalPage, currentPage }, setCurrentPage] = usePagination(data.frames, 20, slug)\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n\n   return (\n      <>\n         {slicedObject && (\n            <Container>\n               <Title>Кадры из фильма</Title>\n               <Content>\n                  {slicedObject.map((item, index) => {\n                     return (\n                        <Image key={index}>\n                           <Picture src={item.preview} alt='frames' />\n                        </Image>\n                     )\n                  })}\n               </Content>\n               <Pagination currentPage={currentPage} setCurrentPage={setCurrentPage} totalCount={totalPage} />\n            </Container>\n         )}\n\n      </>\n   )\n\n}\n\nexport default Frames","import React from \"react\";\n\nconst Reviews = ({data, isLoading, fetchError}) => {\n   return <h1>Reviews</h1>\n}\n\nexport default Reviews","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n   display: flex;\n   gap: 10px;\n   justify-content: center;\n`\nconst Page = styled.span`\n   cursor: pointer;\n   color: ${props => props.currentPage ? '#aaa' : '#333' };\n`\nconst Arrow = styled.div`\n   cursor: pointer;\n   color: orangered;\n`\n\nlet SmallPagination = ({ totalCount, currentPage, setCurrentPage, portionSize = 5 }) => {\n   let pages = []\n   for (let i = 1; i <= totalCount; i++) {\n      pages.push(i)\n   }\n\n   const portionCount = Math.ceil(totalCount / portionSize)\n   let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize))\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n   let rigthPortionPageNumber = portionNumber * portionSize\n\n   useEffect(() => {\n      setPortionNumber(1)\n   }, [])\n\n   return <Container >\n      {portionNumber > 1 && <Arrow onClick={() => { setPortionNumber(portionNumber - 1) }}>&#10094;</Arrow>}\n      {pages.length > 1 && pages\n         .filter(p => {\n            return p >= leftPortionPageNumber && p <= rigthPortionPageNumber\n         })\n         .map(page => {\n            return <Page key={page} onClick={() => { setCurrentPage(page) }} currentPage={currentPage === page } >{page}</Page>\n         })}\n      {portionCount > portionNumber && <Arrow onClick={() => { setPortionNumber(portionNumber + 1) }} >&#10095;</Arrow>}\n   </Container>\n}\n\nexport default SmallPagination;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SmallPagination from \"../../../components/SmallPagination\";\nimport useFilteredObject from \"../../../hooks/useFilteredObject\";\nimport usePagination from \"../../../hooks/usePagination\";\nimport styled from \"styled-components\";\n\nconst Container = styled.section`\n   display: flex;\n   gap: 20px;\n   flex-direction: column;\n`\nconst Title = styled.h3`\n   text-align: center;\n   color: #444;\n   font-size: 1.5em;\n`\nconst Content = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   gap: 20px;\n   justify-content: space-evenly;\n\n`\n\nconst Staff = ({ data, isLoading, fetchError, slug }) => {\n   const [filteredOject] = useFilteredObject(data, 'professionKey')\n   const [{ slicedObject: directors, totalPage: totalPageDirectors, currentPage: currentPageDirectors }, setCurrentPageDirectors] = usePagination(filteredOject.DIRECTOR, 10, slug)\n   const [{ slicedObject: actors, totalPage: totalPageActors, currentPage: currentPageActors }, setCurrentPageActors] = usePagination(filteredOject.ACTOR, 10, slug)\n   const [{ slicedObject: composers, totalPage: totalPageComposers, currentPage: currentPageComposers }, setCurrentPageComposers] = usePagination(filteredOject.COMPOSER, 10, slug)\n   const [{ slicedObject: design, totalPage: totalPageDesign, currentPage: currentPageDesign }, setCurrentPageDesign] = usePagination(filteredOject.DESIGN, 10, slug)\n   const [{ slicedObject: editors, totalPage: totalPageEditors, currentPage: currentPageEditors }, setCurrentPageEditors] = usePagination(filteredOject.EDITOR, 10, slug)\n   const [{ slicedObject: operators, totalPage: totalPageOperators, currentPage: currentPageOperators }, setCurrentPageOperators] = usePagination(filteredOject.OPERATOR, 10, slug)\n   const [{ slicedObject: producers, totalPage: totalPageProducers, currentPage: currentPageProducers }, setCurrentPageProducers] = usePagination(filteredOject.PRODUCER, 10, slug)\n   const [{ slicedObject: translators, totalPage: totalPageTranslators, currentPage: currentPageTranslators }, setCurrentPageTranslators] = usePagination(filteredOject.TRANSLATOR, 10, slug)\n   const [{ slicedObject: voiceDirectors, totalPage: totalPageVoiceDirectors, currentPage: currentPageVoiceDirectors }, setCurrentPageVoiceDirectors] = usePagination(filteredOject.VOICE_DIRECTOR, 10, slug)\n   const [{ slicedObject: writers, totalPage: totalPageWriters, currentPage: currentPageWriters }, setCurrentPageWriters] = usePagination(filteredOject.WRITER, 10, slug)\n\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error...</div>\n   }\n\n   return (\n      <Container>\n         <Title>Над фильмом работали</Title>\n         <Content>\n            <StaffItem data={directors} title='Режиссеры' totalPage={totalPageDirectors} currentPage={currentPageDirectors} setCurrentPage={setCurrentPageDirectors} />\n            <StaffItem data={actors} title='Актеры' totalPage={totalPageActors} currentPage={currentPageActors} setCurrentPage={setCurrentPageActors} />\n            <StaffItem data={composers} title='Композиторы' totalPage={totalPageComposers} currentPage={currentPageComposers} setCurrentPage={setCurrentPageComposers} />\n            <StaffItem data={design} title='Дизайнеры' totalPage={totalPageDesign} currentPage={currentPageDesign} setCurrentPage={setCurrentPageDesign} />\n            <StaffItem data={editors} title='Редакторы' totalPage={totalPageEditors} currentPage={currentPageEditors} setCurrentPage={setCurrentPageEditors} />\n            <StaffItem data={operators} title='Операторы' totalPage={totalPageOperators} currentPage={currentPageOperators} setCurrentPage={setCurrentPageOperators} />\n            <StaffItem data={producers} title='Продюсеры' totalPage={totalPageProducers} currentPage={currentPageProducers} setCurrentPage={setCurrentPageProducers} />\n            <StaffItem data={translators} title='Переводчики' totalPage={totalPageTranslators} currentPage={currentPageTranslators} setCurrentPage={setCurrentPageTranslators} />\n            <StaffItem data={voiceDirectors} title='Режиссеры дубляжа' totalPage={totalPageVoiceDirectors} currentPage={currentPageVoiceDirectors} setCurrentPage={setCurrentPageVoiceDirectors} />\n            <StaffItem data={writers} title='Сценаристы' totalPage={totalPageWriters} currentPage={currentPageWriters} setCurrentPage={setCurrentPageWriters} />\n         </Content>\n      </Container>\n   )\n}\n\nexport default Staff\n\nconst Card = styled.div`\n   flex-basis: 200px;\n   display: flex;\n   flex-direction: column;\n   gap: 10px;\n   text-align: center;\n`\nconst CardTitle = styled.h4`\n   color: #555;\n   font-size: 1.1em;\n`\nconst CardList = styled.ul`\n   display: flex;\n   gap: 10px;\n   flex-direction: column;\n`\nconst CardItem = styled.li`\n   list-style: none;\n   display: flex;\n   align-items: center;\n   gap: 10px;\n`\nconst CardImage = styled.div`\n   display: inline-block;\n   vertical-align: middle;\n   width: 30px;\n   height: 30px;\n   overflow:hidden;\n   border-radius: 5px;\n   & img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n   }\n`\nconst CardLink = styled(Link)`\n   text-decoration: none;\n   color: orangered;\n   font-size: 1em;\n`\n\nconst StaffItem = ({ data, title, totalPage, currentPage, setCurrentPage }) => {\n   if (data.length) {\n      return (\n         <Card>\n            <CardTitle>{title}</CardTitle>\n            <CardList>\n               {data.map(item => {\n                  return (\n                     <CardItem key={item.staffId}>\n                        <CardImage>\n                           <img src={item.posterUrl} alt={item.nameRu || item.nameEn} />\n                        </CardImage>\n                        <CardLink to={`/name/${item.staffId}`} >{item.nameRu || item.nameEn}</CardLink>\n                     </CardItem>\n                  )\n               })}\n            </CardList>\n            <SmallPagination totalCount={totalPage} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n         </Card>\n      )\n   }\n   return null\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.aside`\n   max-width: 100%;\n   background-color: #bbb;\n   padding: 20px 40px;\n   display: flex;\n   gap: 10px;\n   flex-direction: column;\n`\nconst Header = styled.h2`\n   align-self: flex-start;\n   margin: 0;\n   padding: 0;\n   font-size: 1.3em;\n   color: #333;\n`\nconst List = styled.ul`\n   display: flex;\n   gap: 15px;\n   align-items: center;\n   overflow: hidden;\n   overflow-x: scroll;\n`\nconst Item = styled.li`\n   list-style: none; \n`\nconst StyledLink = styled(Link)`\n   text-decoration: none;\n`\nconst Picture = styled.div`\n   width: 150px;\n   height: 200px;\n   position: relative;\n   & :hover {\n      transform: scale(1.1)\n   }\n`\nconst Image = styled.img`\n   width: 100%;\n   height: 100%;\n   object-fit: contain;\n`\n\nconst SliderFilms = React.memo(({ isLoading, fetchError, films, title }) => {\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n   if (films && films.length === 0) {\n      return null\n   }\n   return (\n      <Container>\n         <Header>{title}</Header>\n         <List>\n            {films && films.map((item) => {\n               return (\n                  <Item key={item.kinopoiskId || item.filmId}>\n                     <StyledLink to={`/film/${item.kinopoiskId || item.filmId}`}>\n                        <Picture>\n                           <Image src={item.posterUrlPreview} alt={item.nameRu} />\n                        </Picture>\n                     </StyledLink>\n                  </Item>\n               )\n            })}\n         </List>\n      </Container>\n   );\n})\n\nexport default SliderFilms","import React from 'react'\nimport Info from './components/Info'\nimport Seasons from './components/Seasons/Seasons'\nimport Facts from './components/Facts'\n//import Distributors from './components/Distributors'\nimport BoxOffice from './components/BoxOffice'\nimport Videos from './components/Videos/Videos'\nimport Frames from './components/Frames'\nimport Reviews from './components/Reviews'\nimport Staff from './components/Staff'\nimport styled from 'styled-components'\nimport SliderFilms from '../home/components/SliderFilms'\n\nconst Container = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 20px;\n   padding: 40px;\n`\n\nconst Film = ({ state, slug }) => {\n\n   return (\n      <Container>\n         <Info data={state.filmInfo.data} isLoading={state.filmInfo.isLoading} fetchError={state.filmInfo.fetchError} />\n         <SliderFilms films={state.filmSimilars.data.items} isLoading={state.filmSimilars.isLoading} fetchError={state.filmSimilars.fetchError} title='Похожие фильмы' />\n         <Facts data={state.filmFacts.data} isLoading={state.filmFacts.isLoading} fetchError={state.filmFacts.fetchError} />\n         <BoxOffice data={state.filmBox_office.data} isLoading={state.filmBox_office.isLoading} fetchError={state.filmBox_office.fetchError} />\n         <Staff data={state.filmStaff.data} isLoading={state.filmStaff.isLoading} fetchError={state.filmStaff.fetchError} slug={slug} />\n         {/* <Distributors data={state.filmDistrib.data} isLoading={state.filmDistrib.isLoading} fetchError={state.filmDistrib.fetchError} /> */}\n         <Seasons data={state.filmSeasons.data} isLoading={state.filmSeasons.isLoading} fetchError={state.filmSeasons.fetchError} slug={slug} />\n         <Videos data={state.filmVideos.data} isLoading={state.filmVideos.isLoading} fetchError={state.filmVideos.fetchError} slug={slug} />\n         <Frames data={state.filmFrames.data} isLoading={state.filmFrames.isLoading} fetchError={state.filmFrames.fetchError} slug={slug} />\n         <Reviews data={state.filmReviews.data} isLoading={state.filmReviews.isLoading} fetchError={state.filmReviews.fetchError} />\n      </Container>\n\n\n   )\n}\nexport default Film","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilmInfo, resetFilmDataAC } from \"../../redusers/filmReducer\";\nimport Film from \"./Film\";\n\nconst FilmContainer = ({ match }) => {\n   const slug = match.params.slug\n   const dispatch = useDispatch()\n   const stateFilm = useSelector(state => state.filmData)\n   useEffect(() => {\n      dispatch(getFilmInfo(slug))\n      return () => {\n         dispatch(resetFilmDataAC())\n      }\n   }, [dispatch, slug])\n   return <Film state={stateFilm} slug={slug} />\n}\nexport default FilmContainer","import { getAllFilms } from \"../api/api\"\n\nconst SET_PREMIERS = 'SET_PREMIERS'\nconst SET_IS_LOADING_PREMIERS = 'SET_IS_LOADING_PREMIERS'\nconst SET_FETCH_ERROR_PREMIERS = 'SET_FETCH_ERROR_PREMIERS'\nconst SET_CARRENT_PAGE_PREMIERS = 'SET_CARRENT_PAGE_PREMIERS'\nconst RESET_PREMIERS = 'RESET_PREMIERS'\n\nconst initialState = {\n   films: [],\n   pagesCount: 0,\n   isLoading: null,\n   fetchError: null,\n   currentPage: 1\n}\n\nexport default function premiersReducer(state = initialState, action) {\n   switch (action.type) {\n      case SET_PREMIERS:\n         return {\n            ...state,\n            films: action.payload.items,\n            pagesCount: action.payload.pagesCount,\n            isLoading: false\n         }\n      case SET_IS_LOADING_PREMIERS:\n         return {\n            ...state,\n            isLoading: action.payload\n         }\n      case SET_FETCH_ERROR_PREMIERS:\n         return {\n            ...state,\n            fetchError: action.payload\n         }\n      case SET_CARRENT_PAGE_PREMIERS:\n         return {\n            ...state,\n            currentPage: action.payload\n         }\n      case RESET_PREMIERS:\n         return {\n            ...state,\n            films: [],\n            pagesCount: 0\n         }\n      default:\n         return state\n   }\n}\n\nexport const setPremiersAC = (data) => ({ type: SET_PREMIERS, payload: data })\n\nexport const setIsLoadingPremiersAC = (bool) => ({ type: SET_IS_LOADING_PREMIERS, payload: bool })\n\nexport const setFetchErrorPremiersAC = (error) => ({ type: SET_FETCH_ERROR_PREMIERS, payload: error })\n\nexport const resetPremiersAC = () => ({ type: RESET_PREMIERS })\n\n// const setCurrentPageAwaitFilmsAC = (page) => ({ type: SET_CARRENT_PAGE_PREMIERS, payload: page })\n\nexport const getPremiers = (params, query) => {\n   return async (dispatch) => {\n      try {\n         dispatch(setIsLoadingPremiersAC(true))\n         const response = await getAllFilms(params, query)\n         dispatch(setPremiersAC(response))\n      } catch (error) {\n         debugger\n         console.log(error.message);\n         dispatch(setFetchErrorPremiersAC(error))\n         dispatch(setIsLoadingPremiersAC(false))\n      }\n   }\n}","import { getAllFilms } from \"../api/api\"\n\nconst SET_FILMS = 'SET_FILMS'\nconst SET_IS_LOADING_FILMS = 'SET_IS_LOADING_FILMS'\nconst SET_FETCH_ERROR_FILMS = 'SET_FETCH_ERROR_FILMS'\nconst SET_CARRENT_PAGE_FILMS = 'SET_CARRENT_PAGE_FILMS'\nconst RESET_DATA = 'RESET_DATA'\n\nconst initialState = {\n   films: [],\n   pagesCount: 0,\n   isLoading: null,\n   fetchError: null,\n   currentPage: 1\n}\n\nexport default function filmsReducer(state = initialState, action) {\n   switch (action.type) {\n      case SET_FILMS:\n         return {\n            ...state,\n            films: action.payload.films,\n            pagesCount: action.payload.pagesCount,\n            isLoading: false\n         }\n      case SET_IS_LOADING_FILMS:\n         return {\n            ...state,\n            isLoading: action.payload\n         }\n      case SET_FETCH_ERROR_FILMS:\n         return {\n            ...state,\n            fetchError: action.payload\n         }\n      case SET_CARRENT_PAGE_FILMS:\n         return {\n            ...state,\n            currentPage: action.payload\n         }\n      case RESET_DATA:\n         return {\n            films: [],\n            pagesCount: 0,\n            isLoading: null,\n            fetchError: null,\n            currentPage: 1\n         }\n      default:\n         return state\n   }\n}\n\nexport const setFilmsAC = (data) => ({ type: SET_FILMS, payload: data })\n\nexport const setIsLoadingFilmsAC = (bool) => ({ type: SET_IS_LOADING_FILMS, payload: bool })\n\nexport const setFetchErrorFilmsAC = (error) => ({ type: SET_FETCH_ERROR_FILMS, payload: error })\n\nexport const setCurrentPageFilmsAC = (page) => ({ type: SET_CARRENT_PAGE_FILMS, payload: page })\n\nexport const resetDataAC = () => ({ type: RESET_DATA })\n\nexport const getFilms = (params, query) => {\n   return async (dispatch) => {\n      try {\n         dispatch(setIsLoadingFilmsAC(true))\n         const response = await getAllFilms(params, query)\n         dispatch(setFilmsAC(response))\n      } catch (error) {\n         debugger\n         console.log(error.message);\n         dispatch(setFetchErrorFilmsAC(error))\n         dispatch(setIsLoadingFilmsAC(false))\n      }\n   }\n}","import { useState, useEffect } from \"react\";\n\nconst useSwitchPath = (path, currentPage) => {\n   const [params, setParams] = useState({})\n   const [title, setTitle] = useState('')\n\n   useEffect(() => {\n      switch (path) {\n         case '/':\n            setParams({ type: 'TOP_250_BEST_FILMS', page: currentPage })\n            setTitle('Топ лучших фильмов')\n            break;\n         case '/populars':\n            setParams({ type: 'TOP_100_POPULAR_FILMS', page: currentPage })\n            setTitle('Топ популярных фильмов')\n            break;\n         case '/await':\n            setParams({ type: 'TOP_AWAIT_FILMS', page: currentPage })\n            setTitle('Топ ожидаемых фильмов')\n            break;\n         default:\n            break;\n      }\n   }, [currentPage, path])\n\n   return [params, title]\n}\n\nexport default useSwitchPath","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Pagination from \"../../../components/Pagination\";\n\nconst Container = styled.aside`\n   max-width: 100%;\n   background-color: #eee;\n   padding: 20px 40px;\n   display: flex;\n   gap: 20px;\n   flex-direction: column;\n`\nconst Header = styled.h1`\n   align-self: flex-start;\n   margin: 0;\n   padding: 0;\n   font-size: 1.8em;\n   font-weight: 700;\n   color: #333;\n`\nconst List = styled.ul`\n   display: flex;\n   flex-wrap: wrap;\n   gap: 30px;\n   justify-content: space-between;\n   align-items: center;\n`\nconst Item = styled.li`\n   list-style: none; \n`\nconst StyledLink = styled(Link)`\n   text-decoration: none;\n`\nconst Contant = styled.div`\n   width: 240px;\n   height: 320px;\n   position: relative;\n   & :hover{\n      opacity: 1;\n   }\n`\nconst Image = styled.img`\n   width: 100%;\n   height: 100%;\n   object-fit: cover;\n`\nconst Description = styled.div`\n   position: absolute;\n   top: 0;\n   left: 0;\n   width: 100%;\n   height: 100%;\n   background-color: rgba(0,0,0,0.7);\n   opacity: 0;\n   transition: 0.5s;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   flex-direction: column;\n   gap: 20px;\n   color: #fff;\n   padding: 20px;\n   text-align: center;\n`\n\nconst SectionFilms = ({ isLoading, fetchError, films, title, totalCount, currentPage, setCurrentPage }) => {\n   if (isLoading) {\n      return <div>Loading...</div>\n   }\n   if (fetchError) {\n      return <div>Some error</div>\n   }\n   return (\n      <Container>\n         <Header>{title}</Header>\n         <List>\n            {films.map((item) => {\n               return (\n                  <Item key={item.filmId}>\n                     <StyledLink to={`/film/${item.filmId}`}>\n                        <Contant>\n                           <Image src={item.posterUrlPreview} alt={item.nameRu} />\n                           <Description>\n                              <h3>{item.nameRu}</h3>\n                              <p>Год: {item.year}</p>\n                              <p>Длительность: {item.filmLength}</p>\n                              <p>Рейтинг: {item.rating}</p>\n                           </Description>\n                        </Contant>\n                     </StyledLink>\n                  </Item>\n               )\n            })}\n         </List>\n         <Pagination totalCount={totalCount} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      </Container>\n   );\n}\n\nexport default SectionFilms","import React from \"react\";\nimport SectionFilms from \"./components/SectionFilms\";\n\nimport SliderFilms from \"./components/SliderFilms\";\n\nconst Home = ({ stateTopFilms, statePremiers, title, setCurrentPage }) => {\n\n   return (\n      <div>\n         <SliderFilms isLoading={statePremiers.isLoading} fetchError={statePremiers.fetchError} films={statePremiers.films} title='Новинки в следующем месяце' />\n         <SectionFilms isLoading={stateTopFilms.isLoading} fetchError={stateTopFilms.fetchError} films={stateTopFilms.films} totalCount={stateTopFilms.pagesCount} title={title} currentPage={stateTopFilms.currentPage} setCurrentPage={setCurrentPage} />\n      </div>\n\n   )\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getPremiers } from \"../../redusers/premiersReducer\";\nimport { getFilms, setCurrentPageFilmsAC } from \"../../redusers/filmsReducer\";\nimport useSwitchPath from '../../hooks/useSwitchPath'\nimport Home from \"./Home\";\nimport { nextData } from \"../../utils/utils\";\n\nconst HomeContainer = ({ match }) => {\n   const statePremiers = useSelector(state => state.premiers)\n   const stateTopFilms = useSelector(state => state.topFilms)\n   const dispatch = useDispatch()\n   const [activePath, setActivePath] = useState(match.path)\n   const [params, title] = useSwitchPath(match.path, stateTopFilms.currentPage)\n   const setCurrentPage = (page) => {\n      dispatch(setCurrentPageFilmsAC(page))\n   }\n\n   useEffect(() => {\n      if (activePath !== match.path) {\n         dispatch(setCurrentPageFilmsAC(1))\n         setActivePath(match.path)\n      }\n   }, [dispatch, match.path, activePath])\n\n\n   useEffect(() => {\n      dispatch(getPremiers(nextData(), `/api/v2.2/films/premieres`))\n      dispatch(getFilms(params, '/api/v2.2/films/top'))\n   }, [dispatch, params, statePremiers.currentPage])\n\n\n\n   return (\n      <Home statePremiers={statePremiers} stateTopFilms={stateTopFilms} setCurrentPage={setCurrentPage} title={title} />\n   )\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ActorContainer from \"./pages/actor/ActorContainer\";\nimport FilmContainer from \"./pages/film/FilmContainer\";\n\nimport HomeContainer from './pages/home/HomeContainer'\n\nconst Routes = () => {\n   return (\n      <Switch>\n         <Route exact path='/' component={HomeContainer} />\n         <Route path='/populars' component={HomeContainer} />\n         <Route path='/await' component={HomeContainer} />\n         <Route path='/filters' component={HomeContainer} />\n         <Route path='/search' component={HomeContainer} />\n         <Route path='/film/:slug' component={FilmContainer} />\n         <Route path='/name/:slug' component={ActorContainer} />\n         <Redirect to='/' />\n      </Switch>\n   )\n}\n\nexport default Routes","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer\";\nimport { HashRouter } from \"react-router-dom\";\nimport Routes from \"../Routes\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Container>\n        <Header />\n        <Routes />\n        <Footer />\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport premiersReducer from \"./premiersReducer\";\nimport filmsReducer from \"./filmsReducer\";\nimport filmReducer from \"./filmReducer\";\nimport personReducer from \"./personReducer\";\n\nconst rootReducer = combineReducers({\n   premiers: premiersReducer,\n   topFilms: filmsReducer,\n   filmData: filmReducer,\n   person: personReducer\n})\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport { Provider } from 'react-redux';\nimport { store } from './redusers/store';\nimport { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Fira Sans\", sans-serif;\n  }\n`\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}